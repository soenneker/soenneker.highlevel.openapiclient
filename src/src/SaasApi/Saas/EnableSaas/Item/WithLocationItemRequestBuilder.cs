// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.HighLevel.OpenApiClient.Models;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.HighLevel.OpenApiClient.SaasApi.Saas.EnableSaas.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \saas-api\saas\enable-saas\{locationId}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithLocationItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.SaasApi.Saas.EnableSaas.Item.WithLocationItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithLocationItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/saas-api/saas/enable-saas/{locationId}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.SaasApi.Saas.EnableSaas.Item.WithLocationItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithLocationItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/saas-api/saas/enable-saas/{locationId}", rawUrl)
        {
        }
        /// <summary>
        /// &lt;div&gt;                  &lt;p&gt;Enable SaaS for Sub-Account (Formerly Location) based on the data provided&lt;/p&gt;                  &lt;div&gt;                    &lt;span style= &quot;display: inline-block;                                width: 25px; height: 25px;                                background-color: yellow;                                color: black;                                font-weight: bold;                                font-size: 24px;                                text-align: center;                                line-height: 22px;                                border: 2px solid black;                                border-radius: 10%;                                margin-right: 10px;&quot;&gt;                                !                      &lt;/span&gt;                      &lt;span&gt;                        &lt;strong&gt;                          This feature is only available on Agency Pro ($497) plan.                        &lt;/strong&gt;                      &lt;/span&gt;                  &lt;/div&gt;                &lt;/div&gt;    
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.SaasApi.Saas.EnableSaas.Item.WithLocationPostResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.HighLevel.OpenApiClient.SaasApi.Saas.EnableSaas.Item.WithLocationPostResponse?> PostAsync(global::Soenneker.HighLevel.OpenApiClient.Models.EnableSaasDto body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.HighLevel.OpenApiClient.SaasApi.Saas.EnableSaas.Item.WithLocationPostResponse> PostAsync(global::Soenneker.HighLevel.OpenApiClient.Models.EnableSaasDto body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendAsync<global::Soenneker.HighLevel.OpenApiClient.SaasApi.Saas.EnableSaas.Item.WithLocationPostResponse>(requestInfo, global::Soenneker.HighLevel.OpenApiClient.SaasApi.Saas.EnableSaas.Item.WithLocationPostResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;div&gt;                  &lt;p&gt;Enable SaaS for Sub-Account (Formerly Location) based on the data provided&lt;/p&gt;                  &lt;div&gt;                    &lt;span style= &quot;display: inline-block;                                width: 25px; height: 25px;                                background-color: yellow;                                color: black;                                font-weight: bold;                                font-size: 24px;                                text-align: center;                                line-height: 22px;                                border: 2px solid black;                                border-radius: 10%;                                margin-right: 10px;&quot;&gt;                                !                      &lt;/span&gt;                      &lt;span&gt;                        &lt;strong&gt;                          This feature is only available on Agency Pro ($497) plan.                        &lt;/strong&gt;                      &lt;/span&gt;                  &lt;/div&gt;                &lt;/div&gt;    
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Soenneker.HighLevel.OpenApiClient.Models.EnableSaasDto body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Soenneker.HighLevel.OpenApiClient.Models.EnableSaasDto body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.SaasApi.Saas.EnableSaas.Item.WithLocationItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.HighLevel.OpenApiClient.SaasApi.Saas.EnableSaas.Item.WithLocationItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.HighLevel.OpenApiClient.SaasApi.Saas.EnableSaas.Item.WithLocationItemRequestBuilder(rawUrl, RequestAdapter);
        }
    }
}
#pragma warning restore CS0618
