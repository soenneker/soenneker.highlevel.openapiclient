// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class GetCompanyByIdSchema : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The address property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Address { get; set; }
#nullable restore
#else
        public string Address { get; set; }
#endif
        /// <summary>The affiliatePolicyAcceptedBy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AffiliatePolicyAcceptedBy { get; set; }
#nullable restore
#else
        public string AffiliatePolicyAcceptedBy { get; set; }
#endif
        /// <summary>The affiliatePolicyAcceptedDate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AffiliatePolicyAcceptedDate { get; set; }
#nullable restore
#else
        public string AffiliatePolicyAcceptedDate { get; set; }
#endif
        /// <summary>The affiliatePolicyVersion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AffiliatePolicyVersion { get; set; }
#nullable restore
#else
        public string AffiliatePolicyVersion { get; set; }
#endif
        /// <summary>Flag to set if auto suspend is enabled</summary>
        public bool? AutoSuspendEnabled { get; set; }
        /// <summary>The affinity group of the agency</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BusinessAffinityGroup { get; set; }
#nullable restore
#else
        public string BusinessAffinityGroup { get; set; }
#endif
        /// <summary>Business category</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BusinessCategory { get; set; }
#nullable restore
#else
        public string BusinessCategory { get; set; }
#endif
        /// <summary>The business niche in which the agency is operating</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BusinessNiche { get; set; }
#nullable restore
#else
        public string BusinessNiche { get; set; }
#endif
        /// <summary>Flag to set if cancel plan is enabled</summary>
        public bool? CancelEnabledForClients { get; set; }
        /// <summary>The city property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? City { get; set; }
#nullable restore
#else
        public string City { get; set; }
#endif
        /// <summary>The country property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Country { get; set; }
#nullable restore
#else
        public string Country { get; set; }
#endif
        /// <summary>The currency property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>The customerType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerType { get; set; }
#nullable restore
#else
        public string CustomerType { get; set; }
#endif
        /// <summary>The disableEmailService property</summary>
        public bool? DisableEmailService { get; set; }
        /// <summary>The domain property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Domain { get; set; }
#nullable restore
#else
        public string Domain { get; set; }
#endif
        /// <summary>The email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>The enableDepreciatedFeatures property</summary>
        public bool? EnableDepreciatedFeatures { get; set; }
        /// <summary>Flag to determine if new sub-accounts should use default data</summary>
        public bool? EnableNewSubAccountDefaultData { get; set; }
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The isEnterpriseAccount property</summary>
        public bool? IsEnterpriseAccount { get; set; }
        /// <summary>The isReselling property</summary>
        public bool? IsReselling { get; set; }
        /// <summary>The isSandboxAccount property</summary>
        public bool? IsSandboxAccount { get; set; }
        /// <summary>The locationCount property</summary>
        public double? LocationCount { get; set; }
        /// <summary>The logoUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LogoUrl { get; set; }
#nullable restore
#else
        public string LogoUrl { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The onboardingInfo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetCompanyByIdSchema_onboardingInfo? OnboardingInfo { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetCompanyByIdSchema_onboardingInfo OnboardingInfo { get; set; }
#endif
        /// <summary>The phone property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Phone { get; set; }
#nullable restore
#else
        public string Phone { get; set; }
#endif
        /// <summary>The plan property</summary>
        public double? Plan { get; set; }
        /// <summary>The postalCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PostalCode { get; set; }
#nullable restore
#else
        public string PostalCode { get; set; }
#endif
        /// <summary>If you want to enable / disable Priority Support for any agency. Default value is false.</summary>
        public bool? PremiumUpgraded { get; set; }
        /// <summary>The privacyPolicy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PrivacyPolicy { get; set; }
#nullable restore
#else
        public string PrivacyPolicy { get; set; }
#endif
        /// <summary>The privacyPolicyAcceptedBy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PrivacyPolicyAcceptedBy { get; set; }
#nullable restore
#else
        public string PrivacyPolicyAcceptedBy { get; set; }
#endif
        /// <summary>The privacyPolicyAcceptedDate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PrivacyPolicyAcceptedDate { get; set; }
#nullable restore
#else
        public string PrivacyPolicyAcceptedDate { get; set; }
#endif
        /// <summary>The privacyPolicyVersion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PrivacyPolicyVersion { get; set; }
#nullable restore
#else
        public string PrivacyPolicyVersion { get; set; }
#endif
        /// <summary>The referralId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReferralId { get; set; }
#nullable restore
#else
        public string ReferralId { get; set; }
#endif
        /// <summary>The relationshipNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RelationshipNumber { get; set; }
#nullable restore
#else
        public string RelationshipNumber { get; set; }
#endif
        /// <summary>Saas Settings</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetCompanyByIdSchema_saasSettings? SaasSettings { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetCompanyByIdSchema_saasSettings SaasSettings { get; set; }
#endif
        /// <summary>The spareDomain property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SpareDomain { get; set; }
#nullable restore
#else
        public string SpareDomain { get; set; }
#endif
        /// <summary>The state property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? State { get; set; }
#nullable restore
#else
        public string State { get; set; }
#endif
        /// <summary>The status property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>The stripeConnectId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StripeConnectId { get; set; }
#nullable restore
#else
        public string StripeConnectId { get; set; }
#endif
        /// <summary>The subdomain property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Subdomain { get; set; }
#nullable restore
#else
        public string Subdomain { get; set; }
#endif
        /// <summary>The termsConditions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TermsConditions { get; set; }
#nullable restore
#else
        public string TermsConditions { get; set; }
#endif
        /// <summary>The termsOfServiceAcceptedBy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TermsOfServiceAcceptedBy { get; set; }
#nullable restore
#else
        public string TermsOfServiceAcceptedBy { get; set; }
#endif
        /// <summary>The termsOfServiceAcceptedDate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TermsOfServiceAcceptedDate { get; set; }
#nullable restore
#else
        public string TermsOfServiceAcceptedDate { get; set; }
#endif
        /// <summary>The termsOfServiceVersion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TermsOfServiceVersion { get; set; }
#nullable restore
#else
        public string TermsOfServiceVersion { get; set; }
#endif
        /// <summary>The timezone property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Timezone { get; set; }
#nullable restore
#else
        public string Timezone { get; set; }
#endif
        /// <summary>The twilioFreeCredits property</summary>
        public double? TwilioFreeCredits { get; set; }
        /// <summary>The twilioTrialMode property</summary>
        public bool? TwilioTrialMode { get; set; }
        /// <summary>Flag to set if upgrade plan is enabled</summary>
        public bool? UpgradeEnabledForClients { get; set; }
        /// <summary>The website property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Website { get; set; }
#nullable restore
#else
        public string Website { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.GetCompanyByIdSchema"/> and sets the default values.
        /// </summary>
        public GetCompanyByIdSchema()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.GetCompanyByIdSchema"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.GetCompanyByIdSchema CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.GetCompanyByIdSchema();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "address", n => { Address = n.GetStringValue(); } },
                { "affiliatePolicyAcceptedBy", n => { AffiliatePolicyAcceptedBy = n.GetStringValue(); } },
                { "affiliatePolicyAcceptedDate", n => { AffiliatePolicyAcceptedDate = n.GetStringValue(); } },
                { "affiliatePolicyVersion", n => { AffiliatePolicyVersion = n.GetStringValue(); } },
                { "autoSuspendEnabled", n => { AutoSuspendEnabled = n.GetBoolValue(); } },
                { "businessAffinityGroup", n => { BusinessAffinityGroup = n.GetStringValue(); } },
                { "businessCategory", n => { BusinessCategory = n.GetStringValue(); } },
                { "businessNiche", n => { BusinessNiche = n.GetStringValue(); } },
                { "cancelEnabledForClients", n => { CancelEnabledForClients = n.GetBoolValue(); } },
                { "city", n => { City = n.GetStringValue(); } },
                { "country", n => { Country = n.GetStringValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "customerType", n => { CustomerType = n.GetStringValue(); } },
                { "disableEmailService", n => { DisableEmailService = n.GetBoolValue(); } },
                { "domain", n => { Domain = n.GetStringValue(); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "enableDepreciatedFeatures", n => { EnableDepreciatedFeatures = n.GetBoolValue(); } },
                { "enableNewSubAccountDefaultData", n => { EnableNewSubAccountDefaultData = n.GetBoolValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "isEnterpriseAccount", n => { IsEnterpriseAccount = n.GetBoolValue(); } },
                { "isReselling", n => { IsReselling = n.GetBoolValue(); } },
                { "isSandboxAccount", n => { IsSandboxAccount = n.GetBoolValue(); } },
                { "locationCount", n => { LocationCount = n.GetDoubleValue(); } },
                { "logoUrl", n => { LogoUrl = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "onboardingInfo", n => { OnboardingInfo = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetCompanyByIdSchema_onboardingInfo>(global::Soenneker.HighLevel.OpenApiClient.Models.GetCompanyByIdSchema_onboardingInfo.CreateFromDiscriminatorValue); } },
                { "phone", n => { Phone = n.GetStringValue(); } },
                { "plan", n => { Plan = n.GetDoubleValue(); } },
                { "postalCode", n => { PostalCode = n.GetStringValue(); } },
                { "premiumUpgraded", n => { PremiumUpgraded = n.GetBoolValue(); } },
                { "privacyPolicy", n => { PrivacyPolicy = n.GetStringValue(); } },
                { "privacyPolicyAcceptedBy", n => { PrivacyPolicyAcceptedBy = n.GetStringValue(); } },
                { "privacyPolicyAcceptedDate", n => { PrivacyPolicyAcceptedDate = n.GetStringValue(); } },
                { "privacyPolicyVersion", n => { PrivacyPolicyVersion = n.GetStringValue(); } },
                { "referralId", n => { ReferralId = n.GetStringValue(); } },
                { "relationshipNumber", n => { RelationshipNumber = n.GetStringValue(); } },
                { "saasSettings", n => { SaasSettings = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetCompanyByIdSchema_saasSettings>(global::Soenneker.HighLevel.OpenApiClient.Models.GetCompanyByIdSchema_saasSettings.CreateFromDiscriminatorValue); } },
                { "spareDomain", n => { SpareDomain = n.GetStringValue(); } },
                { "state", n => { State = n.GetStringValue(); } },
                { "status", n => { Status = n.GetStringValue(); } },
                { "stripeConnectId", n => { StripeConnectId = n.GetStringValue(); } },
                { "subdomain", n => { Subdomain = n.GetStringValue(); } },
                { "termsConditions", n => { TermsConditions = n.GetStringValue(); } },
                { "termsOfServiceAcceptedBy", n => { TermsOfServiceAcceptedBy = n.GetStringValue(); } },
                { "termsOfServiceAcceptedDate", n => { TermsOfServiceAcceptedDate = n.GetStringValue(); } },
                { "termsOfServiceVersion", n => { TermsOfServiceVersion = n.GetStringValue(); } },
                { "timezone", n => { Timezone = n.GetStringValue(); } },
                { "twilioFreeCredits", n => { TwilioFreeCredits = n.GetDoubleValue(); } },
                { "twilioTrialMode", n => { TwilioTrialMode = n.GetBoolValue(); } },
                { "upgradeEnabledForClients", n => { UpgradeEnabledForClients = n.GetBoolValue(); } },
                { "website", n => { Website = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("address", Address);
            writer.WriteStringValue("affiliatePolicyAcceptedBy", AffiliatePolicyAcceptedBy);
            writer.WriteStringValue("affiliatePolicyAcceptedDate", AffiliatePolicyAcceptedDate);
            writer.WriteStringValue("affiliatePolicyVersion", AffiliatePolicyVersion);
            writer.WriteBoolValue("autoSuspendEnabled", AutoSuspendEnabled);
            writer.WriteStringValue("businessAffinityGroup", BusinessAffinityGroup);
            writer.WriteStringValue("businessCategory", BusinessCategory);
            writer.WriteStringValue("businessNiche", BusinessNiche);
            writer.WriteBoolValue("cancelEnabledForClients", CancelEnabledForClients);
            writer.WriteStringValue("city", City);
            writer.WriteStringValue("country", Country);
            writer.WriteStringValue("currency", Currency);
            writer.WriteStringValue("customerType", CustomerType);
            writer.WriteBoolValue("disableEmailService", DisableEmailService);
            writer.WriteStringValue("domain", Domain);
            writer.WriteStringValue("email", Email);
            writer.WriteBoolValue("enableDepreciatedFeatures", EnableDepreciatedFeatures);
            writer.WriteBoolValue("enableNewSubAccountDefaultData", EnableNewSubAccountDefaultData);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("isEnterpriseAccount", IsEnterpriseAccount);
            writer.WriteBoolValue("isReselling", IsReselling);
            writer.WriteBoolValue("isSandboxAccount", IsSandboxAccount);
            writer.WriteDoubleValue("locationCount", LocationCount);
            writer.WriteStringValue("logoUrl", LogoUrl);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetCompanyByIdSchema_onboardingInfo>("onboardingInfo", OnboardingInfo);
            writer.WriteStringValue("phone", Phone);
            writer.WriteDoubleValue("plan", Plan);
            writer.WriteStringValue("postalCode", PostalCode);
            writer.WriteBoolValue("premiumUpgraded", PremiumUpgraded);
            writer.WriteStringValue("privacyPolicy", PrivacyPolicy);
            writer.WriteStringValue("privacyPolicyAcceptedBy", PrivacyPolicyAcceptedBy);
            writer.WriteStringValue("privacyPolicyAcceptedDate", PrivacyPolicyAcceptedDate);
            writer.WriteStringValue("privacyPolicyVersion", PrivacyPolicyVersion);
            writer.WriteStringValue("referralId", ReferralId);
            writer.WriteStringValue("relationshipNumber", RelationshipNumber);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetCompanyByIdSchema_saasSettings>("saasSettings", SaasSettings);
            writer.WriteStringValue("spareDomain", SpareDomain);
            writer.WriteStringValue("state", State);
            writer.WriteStringValue("status", Status);
            writer.WriteStringValue("stripeConnectId", StripeConnectId);
            writer.WriteStringValue("subdomain", Subdomain);
            writer.WriteStringValue("termsConditions", TermsConditions);
            writer.WriteStringValue("termsOfServiceAcceptedBy", TermsOfServiceAcceptedBy);
            writer.WriteStringValue("termsOfServiceAcceptedDate", TermsOfServiceAcceptedDate);
            writer.WriteStringValue("termsOfServiceVersion", TermsOfServiceVersion);
            writer.WriteStringValue("timezone", Timezone);
            writer.WriteDoubleValue("twilioFreeCredits", TwilioFreeCredits);
            writer.WriteBoolValue("twilioTrialMode", TwilioTrialMode);
            writer.WriteBoolValue("upgradeEnabledForClients", UpgradeEnabledForClients);
            writer.WriteStringValue("website", Website);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
