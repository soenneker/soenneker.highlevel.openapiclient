// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class GetAvailableShippingRates : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Address of the customer</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_address? Address { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_address Address { get; set; }
#endif
        /// <summary>Location Id or Agency Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AltId { get; set; }
#nullable restore
#else
        public string AltId { get; set; }
#endif
        /// <summary>The altType property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_altType? AltType { get; set; }
        /// <summary>it will not calculate the order amount form backend if it is true</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_amountAvailable? AmountAvailable { get; set; }
        /// <summary>Country code of the customer</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_country? Country { get; set; }
        /// <summary>Coupon code</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CouponCode { get; set; }
#nullable restore
#else
        public string CouponCode { get; set; }
#endif
        /// <summary>An array of price IDs and quantity</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.ProductItem>? Products { get; set; }
#nullable restore
#else
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.ProductItem> Products { get; set; }
#endif
        /// <summary>Source of the order</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_source? Source { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_source Source { get; set; }
#endif
        /// <summary>The amount of the price. ( min: 0.01 )</summary>
        public double? TotalOrderAmount { get; set; }
        /// <summary>Estimated weight of the order calculated from the order creation side in kg(s)</summary>
        public double? TotalOrderWeight { get; set; }
        /// <summary>Flag to pass when the weight is already calculated and should not calculate again</summary>
        public bool? WeightAvailable { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates"/> and sets the default values.
        /// </summary>
        public GetAvailableShippingRates()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "address", n => { Address = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_address>(global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_address.CreateFromDiscriminatorValue); } },
                { "altId", n => { AltId = n.GetStringValue(); } },
                { "altType", n => { AltType = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_altType>(); } },
                { "amountAvailable", n => { AmountAvailable = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_amountAvailable>(); } },
                { "country", n => { Country = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_country>(); } },
                { "couponCode", n => { CouponCode = n.GetStringValue(); } },
                { "products", n => { Products = n.GetCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.ProductItem>(global::Soenneker.HighLevel.OpenApiClient.Models.ProductItem.CreateFromDiscriminatorValue)?.AsList(); } },
                { "source", n => { Source = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_source>(global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_source.CreateFromDiscriminatorValue); } },
                { "totalOrderAmount", n => { TotalOrderAmount = n.GetDoubleValue(); } },
                { "totalOrderWeight", n => { TotalOrderWeight = n.GetDoubleValue(); } },
                { "weightAvailable", n => { WeightAvailable = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_address>("address", Address);
            writer.WriteStringValue("altId", AltId);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_altType>("altType", AltType);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_amountAvailable>("amountAvailable", AmountAvailable);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_country>("country", Country);
            writer.WriteStringValue("couponCode", CouponCode);
            writer.WriteCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.ProductItem>("products", Products);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetAvailableShippingRates_source>("source", Source);
            writer.WriteDoubleValue("totalOrderAmount", TotalOrderAmount);
            writer.WriteDoubleValue("totalOrderWeight", TotalOrderWeight);
            writer.WriteBoolValue("weightAvailable", WeightAvailable);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
