// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CreateInvoiceTemplateDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>location Id / company Id based on altType</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AltId { get; set; }
#nullable restore
#else
        public string AltId { get; set; }
#endif
        /// <summary>Alt Type</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_altType? AltType { get; set; }
        /// <summary>attachments for the invoice</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Attachments { get; set; }
#nullable restore
#else
        public List<string> Attachments { get; set; }
#endif
        /// <summary>Automatic taxes enabled for the Invoice</summary>
        public bool? AutomaticTaxesEnabled { get; set; }
        /// <summary>The businessDetails property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.BusinessDetailsDto? BusinessDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.BusinessDetailsDto BusinessDetails { get; set; }
#endif
        /// <summary>The currency property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>The discount property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.DiscountDto? Discount { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.DiscountDto Discount { get; set; }
#endif
        /// <summary>The internal property</summary>
        public bool? Internal { get; set; }
        /// <summary>prefix for invoice number</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceNumberPrefix { get; set; }
#nullable restore
#else
        public string InvoiceNumberPrefix { get; set; }
#endif
        /// <summary>The items property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.InvoiceItemDto>? Items { get; set; }
#nullable restore
#else
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.InvoiceItemDto> Items { get; set; }
#endif
        /// <summary>Late fees configuration for the invoices</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_lateFeesConfiguration? LateFeesConfiguration { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_lateFeesConfiguration LateFeesConfiguration { get; set; }
#endif
        /// <summary>miscellaneous charges for the invoice</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_miscellaneousCharges? MiscellaneousCharges { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_miscellaneousCharges MiscellaneousCharges { get; set; }
#endif
        /// <summary>Name of the template</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Payment Methods for Invoices</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_paymentMethods? PaymentMethods { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_paymentMethods PaymentMethods { get; set; }
#endif
        /// <summary>The termsNotes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TermsNotes { get; set; }
#nullable restore
#else
        public string TermsNotes { get; set; }
#endif
        /// <summary>Configuration for tips on invoices</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_tipsConfiguration? TipsConfiguration { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_tipsConfiguration TipsConfiguration { get; set; }
#endif
        /// <summary>Template title</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto"/> and sets the default values.
        /// </summary>
        public CreateInvoiceTemplateDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "altId", n => { AltId = n.GetStringValue(); } },
                { "altType", n => { AltType = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_altType>(); } },
                { "attachments", n => { Attachments = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "automaticTaxesEnabled", n => { AutomaticTaxesEnabled = n.GetBoolValue(); } },
                { "businessDetails", n => { BusinessDetails = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.BusinessDetailsDto>(global::Soenneker.HighLevel.OpenApiClient.Models.BusinessDetailsDto.CreateFromDiscriminatorValue); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "discount", n => { Discount = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.DiscountDto>(global::Soenneker.HighLevel.OpenApiClient.Models.DiscountDto.CreateFromDiscriminatorValue); } },
                { "internal", n => { Internal = n.GetBoolValue(); } },
                { "invoiceNumberPrefix", n => { InvoiceNumberPrefix = n.GetStringValue(); } },
                { "items", n => { Items = n.GetCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.InvoiceItemDto>(global::Soenneker.HighLevel.OpenApiClient.Models.InvoiceItemDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "lateFeesConfiguration", n => { LateFeesConfiguration = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_lateFeesConfiguration>(global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_lateFeesConfiguration.CreateFromDiscriminatorValue); } },
                { "miscellaneousCharges", n => { MiscellaneousCharges = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_miscellaneousCharges>(global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_miscellaneousCharges.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "paymentMethods", n => { PaymentMethods = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_paymentMethods>(global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_paymentMethods.CreateFromDiscriminatorValue); } },
                { "termsNotes", n => { TermsNotes = n.GetStringValue(); } },
                { "tipsConfiguration", n => { TipsConfiguration = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_tipsConfiguration>(global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_tipsConfiguration.CreateFromDiscriminatorValue); } },
                { "title", n => { Title = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("altId", AltId);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_altType>("altType", AltType);
            writer.WriteCollectionOfPrimitiveValues<string>("attachments", Attachments);
            writer.WriteBoolValue("automaticTaxesEnabled", AutomaticTaxesEnabled);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.BusinessDetailsDto>("businessDetails", BusinessDetails);
            writer.WriteStringValue("currency", Currency);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.DiscountDto>("discount", Discount);
            writer.WriteBoolValue("internal", Internal);
            writer.WriteStringValue("invoiceNumberPrefix", InvoiceNumberPrefix);
            writer.WriteCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.InvoiceItemDto>("items", Items);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_lateFeesConfiguration>("lateFeesConfiguration", LateFeesConfiguration);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_miscellaneousCharges>("miscellaneousCharges", MiscellaneousCharges);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_paymentMethods>("paymentMethods", PaymentMethods);
            writer.WriteStringValue("termsNotes", TermsNotes);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.CreateInvoiceTemplateDto_tipsConfiguration>("tipsConfiguration", TipsConfiguration);
            writer.WriteStringValue("title", Title);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
