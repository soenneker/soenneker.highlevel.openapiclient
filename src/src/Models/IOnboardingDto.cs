// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class IOnboardingDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Set to true if it is from affiliate</summary>
        public bool? AffiliateSignup { get; set; }
        /// <summary>The conversationDemo property</summary>
        public bool? ConversationDemo { get; set; }
        /// <summary>The customerCount property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerCount { get; set; }
#nullable restore
#else
        public string CustomerCount { get; set; }
#endif
        /// <summary>Set to true if user joined implementation call</summary>
        public bool? HasJoinedImplementationCall { get; set; }
        /// <summary>Set to true if user joined onboarding call</summary>
        public bool? HasJoinedKickoffCall { get; set; }
        /// <summary>The haveWebsite property</summary>
        public bool? HaveWebsite { get; set; }
        /// <summary>The industryServed property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IndustryServed { get; set; }
#nullable restore
#else
        public string IndustryServed { get; set; }
#endif
        /// <summary>Set to true if user joined onboarding call</summary>
        public bool? KickoffActionTaken { get; set; }
        /// <summary>The location property</summary>
        public bool? Location { get; set; }
        /// <summary>The locationId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LocationId { get; set; }
#nullable restore
#else
        public string LocationId { get; set; }
#endif
        /// <summary>metaData for onboarding</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.IOnboardingDto_metaData? MetaData { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.IOnboardingDto_metaData MetaData { get; set; }
#endif
        /// <summary>The pending property</summary>
        public bool? Pending { get; set; }
        /// <summary>Selected agency plan unique plan Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PlanId { get; set; }
#nullable restore
#else
        public string PlanId { get; set; }
#endif
        /// <summary>The snapshotId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SnapshotId { get; set; }
#nullable restore
#else
        public string SnapshotId { get; set; }
#endif
        /// <summary>The tools property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Tools { get; set; }
#nullable restore
#else
        public List<string> Tools { get; set; }
#endif
        /// <summary>This helps in A/B tracking of onboarding flow</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Version { get; set; }
#nullable restore
#else
        public string Version { get; set; }
#endif
        /// <summary>The websiteUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebsiteUrl { get; set; }
#nullable restore
#else
        public string WebsiteUrl { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.IOnboardingDto"/> and sets the default values.
        /// </summary>
        public IOnboardingDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.IOnboardingDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.IOnboardingDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.IOnboardingDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "affiliateSignup", n => { AffiliateSignup = n.GetBoolValue(); } },
                { "conversationDemo", n => { ConversationDemo = n.GetBoolValue(); } },
                { "customerCount", n => { CustomerCount = n.GetStringValue(); } },
                { "hasJoinedImplementationCall", n => { HasJoinedImplementationCall = n.GetBoolValue(); } },
                { "hasJoinedKickoffCall", n => { HasJoinedKickoffCall = n.GetBoolValue(); } },
                { "haveWebsite", n => { HaveWebsite = n.GetBoolValue(); } },
                { "industryServed", n => { IndustryServed = n.GetStringValue(); } },
                { "kickoffActionTaken", n => { KickoffActionTaken = n.GetBoolValue(); } },
                { "location", n => { Location = n.GetBoolValue(); } },
                { "locationId", n => { LocationId = n.GetStringValue(); } },
                { "metaData", n => { MetaData = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.IOnboardingDto_metaData>(global::Soenneker.HighLevel.OpenApiClient.Models.IOnboardingDto_metaData.CreateFromDiscriminatorValue); } },
                { "pending", n => { Pending = n.GetBoolValue(); } },
                { "planId", n => { PlanId = n.GetStringValue(); } },
                { "snapshotId", n => { SnapshotId = n.GetStringValue(); } },
                { "tools", n => { Tools = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "version", n => { Version = n.GetStringValue(); } },
                { "websiteUrl", n => { WebsiteUrl = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("affiliateSignup", AffiliateSignup);
            writer.WriteBoolValue("conversationDemo", ConversationDemo);
            writer.WriteStringValue("customerCount", CustomerCount);
            writer.WriteBoolValue("hasJoinedImplementationCall", HasJoinedImplementationCall);
            writer.WriteBoolValue("hasJoinedKickoffCall", HasJoinedKickoffCall);
            writer.WriteBoolValue("haveWebsite", HaveWebsite);
            writer.WriteStringValue("industryServed", IndustryServed);
            writer.WriteBoolValue("kickoffActionTaken", KickoffActionTaken);
            writer.WriteBoolValue("location", Location);
            writer.WriteStringValue("locationId", LocationId);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.IOnboardingDto_metaData>("metaData", MetaData);
            writer.WriteBoolValue("pending", Pending);
            writer.WriteStringValue("planId", PlanId);
            writer.WriteStringValue("snapshotId", SnapshotId);
            writer.WriteCollectionOfPrimitiveValues<string>("tools", Tools);
            writer.WriteStringValue("version", Version);
            writer.WriteStringValue("websiteUrl", WebsiteUrl);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
