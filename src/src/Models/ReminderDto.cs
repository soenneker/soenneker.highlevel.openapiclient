// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ReminderDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Subject of the reminder</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmailSubject { get; set; }
#nullable restore
#else
        public string EmailSubject { get; set; }
#endif
        /// <summary>Email template to be used for sending reminders</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmailTemplate { get; set; }
#nullable restore
#else
        public string EmailTemplate { get; set; }
#endif
        /// <summary>Flag indicating if the reminder is enabled or not</summary>
        public bool? Enabled { get; set; }
        /// <summary>Business Hour End Time</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndTime { get; set; }
#nullable restore
#else
        public string EndTime { get; set; }
#endif
        /// <summary>Interval type for the reminder</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.ReminderDto_intervalType? IntervalType { get; set; }
        /// <summary>Maximum number of reminders that can be sent</summary>
        public double? MaxReminders { get; set; }
        /// <summary>Unique identifier for the reminder</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReminderId { get; set; }
#nullable restore
#else
        public string ReminderId { get; set; }
#endif
        /// <summary>Condition for sending the reminder</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.ReminderDto_reminderInvoiceCondition? ReminderInvoiceCondition { get; set; }
        /// <summary>Name of the reminder</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReminderName { get; set; }
#nullable restore
#else
        public string ReminderName { get; set; }
#endif
        /// <summary>frequency gap of the reminder to exeucte</summary>
        public double? ReminderNumber { get; set; }
        /// <summary>Time condition for the reminder</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.ReminderDto_reminderTime? ReminderTime { get; set; }
        /// <summary>SMS template to be used for sending reminders</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SmsTemplate { get; set; }
#nullable restore
#else
        public string SmsTemplate { get; set; }
#endif
        /// <summary>Business Hour Start Time</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartTime { get; set; }
#nullable restore
#else
        public string StartTime { get; set; }
#endif
        /// <summary>Timezone at which reminder will be sent</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Timezone { get; set; }
#nullable restore
#else
        public string Timezone { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.ReminderDto"/> and sets the default values.
        /// </summary>
        public ReminderDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.ReminderDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.ReminderDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.ReminderDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "emailSubject", n => { EmailSubject = n.GetStringValue(); } },
                { "emailTemplate", n => { EmailTemplate = n.GetStringValue(); } },
                { "enabled", n => { Enabled = n.GetBoolValue(); } },
                { "endTime", n => { EndTime = n.GetStringValue(); } },
                { "intervalType", n => { IntervalType = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.ReminderDto_intervalType>(); } },
                { "maxReminders", n => { MaxReminders = n.GetDoubleValue(); } },
                { "reminderId", n => { ReminderId = n.GetStringValue(); } },
                { "reminderInvoiceCondition", n => { ReminderInvoiceCondition = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.ReminderDto_reminderInvoiceCondition>(); } },
                { "reminderName", n => { ReminderName = n.GetStringValue(); } },
                { "reminderNumber", n => { ReminderNumber = n.GetDoubleValue(); } },
                { "reminderTime", n => { ReminderTime = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.ReminderDto_reminderTime>(); } },
                { "smsTemplate", n => { SmsTemplate = n.GetStringValue(); } },
                { "startTime", n => { StartTime = n.GetStringValue(); } },
                { "timezone", n => { Timezone = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("emailSubject", EmailSubject);
            writer.WriteStringValue("emailTemplate", EmailTemplate);
            writer.WriteBoolValue("enabled", Enabled);
            writer.WriteStringValue("endTime", EndTime);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.ReminderDto_intervalType>("intervalType", IntervalType);
            writer.WriteDoubleValue("maxReminders", MaxReminders);
            writer.WriteStringValue("reminderId", ReminderId);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.ReminderDto_reminderInvoiceCondition>("reminderInvoiceCondition", ReminderInvoiceCondition);
            writer.WriteStringValue("reminderName", ReminderName);
            writer.WriteDoubleValue("reminderNumber", ReminderNumber);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.ReminderDto_reminderTime>("reminderTime", ReminderTime);
            writer.WriteStringValue("smsTemplate", SmsTemplate);
            writer.WriteStringValue("startTime", StartTime);
            writer.WriteStringValue("timezone", Timezone);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
