// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class EstimateResponseDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Location Id or Agency Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AltId { get; set; }
#nullable restore
#else
        public string AltId { get; set; }
#endif
        /// <summary>The altType property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_altType? AltType { get; set; }
        /// <summary>Attachments</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.AttachmentsDto>? Attachments { get; set; }
#nullable restore
#else
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.AttachmentsDto> Attachments { get; set; }
#endif
        /// <summary>Auto-invoice settings for the estimate</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_autoInvoice? AutoInvoice { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_autoInvoice AutoInvoice { get; set; }
#endif
        /// <summary>Indicates if automatic taxes were calculated</summary>
        public bool? AutomaticTaxesCalculated { get; set; }
        /// <summary>Indicates if automatic taxes are enabled for this estimate</summary>
        public bool? AutomaticTaxesEnabled { get; set; }
        /// <summary>Business details associated with the estimate</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_businessDetails? BusinessDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_businessDetails BusinessDetails { get; set; }
#endif
        /// <summary>Company identifier associated with the estimate</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CompanyId { get; set; }
#nullable restore
#else
        public string CompanyId { get; set; }
#endif
        /// <summary>Contact details for the estimate</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_contactDetails? ContactDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_contactDetails ContactDetails { get; set; }
#endif
        /// <summary>Timestamp when created</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Currency code</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>Indicates if deleted</summary>
        public bool? Deleted { get; set; }
        /// <summary>Discount details for the estimate template</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_discount? Discount { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_discount Discount { get; set; }
#endif
        /// <summary>History of actions taken on the estimate</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? EstimateActionHistory { get; set; }
#nullable restore
#else
        public List<string> EstimateActionHistory { get; set; }
#endif
        /// <summary>Estimate number prefix</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EstimateNumberPrefix { get; set; }
#nullable restore
#else
        public string EstimateNumberPrefix { get; set; }
#endif
        /// <summary>Date when the estimate expires</summary>
        public DateTimeOffset? ExpiryDate { get; set; }
        /// <summary>Frequency settings for recurring estimates</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_frequencySettings? FrequencySettings { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_frequencySettings FrequencySettings { get; set; }
#endif
        /// <summary>Unique identifier</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Date when the estimate was issued</summary>
        public DateTimeOffset? IssueDate { get; set; }
        /// <summary>An array of items</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<UntypedNode>? Items { get; set; }
#nullable restore
#else
        public List<UntypedNode> Items { get; set; }
#endif
        /// <summary>Timestamp when the estimate was last visited</summary>
        public DateTimeOffset? LastVisitedAt { get; set; }
        /// <summary>Indicates if it is in live mode</summary>
        public bool? LiveMode { get; set; }
        /// <summary>Additional metadata associated with the estimate</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_meta? Meta { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_meta Meta { get; set; }
#endif
        /// <summary>Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>User who sent the estimate</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SentBy { get; set; }
#nullable restore
#else
        public string SentBy { get; set; }
#endif
        /// <summary>Recipient details for the estimate</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_sentTo? SentTo { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_sentTo SentTo { get; set; }
#endif
        /// <summary>Terms and conditions for the estimate, supports HTML markup</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TermsNotes { get; set; }
#nullable restore
#else
        public string TermsNotes { get; set; }
#endif
        /// <summary>Title</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>Total amount</summary>
        public double? Total { get; set; }
        /// <summary>Total amount in USD</summary>
        public double? TotalamountInUSD { get; set; }
        /// <summary>Trace ID for logging and debugging</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TraceId { get; set; }
#nullable restore
#else
        public string TraceId { get; set; }
#endif
        /// <summary>Timestamp when last updated</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>User Id of who last updated</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedBy { get; set; }
#nullable restore
#else
        public string UpdatedBy { get; set; }
#endif
        /// <summary>Version number</summary>
        public double? V { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto"/> and sets the default values.
        /// </summary>
        public EstimateResponseDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "altId", n => { AltId = n.GetStringValue(); } },
                { "altType", n => { AltType = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_altType>(); } },
                { "attachments", n => { Attachments = n.GetCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.AttachmentsDto>(global::Soenneker.HighLevel.OpenApiClient.Models.AttachmentsDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "autoInvoice", n => { AutoInvoice = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_autoInvoice>(global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_autoInvoice.CreateFromDiscriminatorValue); } },
                { "automaticTaxesCalculated", n => { AutomaticTaxesCalculated = n.GetBoolValue(); } },
                { "automaticTaxesEnabled", n => { AutomaticTaxesEnabled = n.GetBoolValue(); } },
                { "businessDetails", n => { BusinessDetails = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_businessDetails>(global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_businessDetails.CreateFromDiscriminatorValue); } },
                { "companyId", n => { CompanyId = n.GetStringValue(); } },
                { "contactDetails", n => { ContactDetails = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_contactDetails>(global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_contactDetails.CreateFromDiscriminatorValue); } },
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "deleted", n => { Deleted = n.GetBoolValue(); } },
                { "discount", n => { Discount = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_discount>(global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_discount.CreateFromDiscriminatorValue); } },
                { "estimateActionHistory", n => { EstimateActionHistory = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "estimateNumberPrefix", n => { EstimateNumberPrefix = n.GetStringValue(); } },
                { "expiryDate", n => { ExpiryDate = n.GetDateTimeOffsetValue(); } },
                { "frequencySettings", n => { FrequencySettings = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_frequencySettings>(global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_frequencySettings.CreateFromDiscriminatorValue); } },
                { "_id", n => { Id = n.GetStringValue(); } },
                { "issueDate", n => { IssueDate = n.GetDateTimeOffsetValue(); } },
                { "items", n => { Items = n.GetCollectionOfPrimitiveValues<UntypedNode>()?.AsList(); } },
                { "lastVisitedAt", n => { LastVisitedAt = n.GetDateTimeOffsetValue(); } },
                { "liveMode", n => { LiveMode = n.GetBoolValue(); } },
                { "meta", n => { Meta = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_meta>(global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_meta.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "sentBy", n => { SentBy = n.GetStringValue(); } },
                { "sentTo", n => { SentTo = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_sentTo>(global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_sentTo.CreateFromDiscriminatorValue); } },
                { "termsNotes", n => { TermsNotes = n.GetStringValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "total", n => { Total = n.GetDoubleValue(); } },
                { "totalamountInUSD", n => { TotalamountInUSD = n.GetDoubleValue(); } },
                { "traceId", n => { TraceId = n.GetStringValue(); } },
                { "updatedAt", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "updatedBy", n => { UpdatedBy = n.GetStringValue(); } },
                { "__v", n => { V = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("altId", AltId);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_altType>("altType", AltType);
            writer.WriteCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.AttachmentsDto>("attachments", Attachments);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_autoInvoice>("autoInvoice", AutoInvoice);
            writer.WriteBoolValue("automaticTaxesCalculated", AutomaticTaxesCalculated);
            writer.WriteBoolValue("automaticTaxesEnabled", AutomaticTaxesEnabled);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_businessDetails>("businessDetails", BusinessDetails);
            writer.WriteStringValue("companyId", CompanyId);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_contactDetails>("contactDetails", ContactDetails);
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteStringValue("currency", Currency);
            writer.WriteBoolValue("deleted", Deleted);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_discount>("discount", Discount);
            writer.WriteCollectionOfPrimitiveValues<string>("estimateActionHistory", EstimateActionHistory);
            writer.WriteStringValue("estimateNumberPrefix", EstimateNumberPrefix);
            writer.WriteDateTimeOffsetValue("expiryDate", ExpiryDate);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_frequencySettings>("frequencySettings", FrequencySettings);
            writer.WriteStringValue("_id", Id);
            writer.WriteDateTimeOffsetValue("issueDate", IssueDate);
            writer.WriteCollectionOfPrimitiveValues<UntypedNode>("items", Items);
            writer.WriteDateTimeOffsetValue("lastVisitedAt", LastVisitedAt);
            writer.WriteBoolValue("liveMode", LiveMode);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_meta>("meta", Meta);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("sentBy", SentBy);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.EstimateResponseDto_sentTo>("sentTo", SentTo);
            writer.WriteStringValue("termsNotes", TermsNotes);
            writer.WriteStringValue("title", Title);
            writer.WriteDoubleValue("total", Total);
            writer.WriteDoubleValue("totalamountInUSD", TotalamountInUSD);
            writer.WriteStringValue("traceId", TraceId);
            writer.WriteDateTimeOffsetValue("updatedAt", UpdatedAt);
            writer.WriteStringValue("updatedBy", UpdatedBy);
            writer.WriteDoubleValue("__v", V);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
