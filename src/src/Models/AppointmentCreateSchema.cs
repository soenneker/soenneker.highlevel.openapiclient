// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AppointmentCreateSchema : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Appointment Address</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Address { get; set; }
#nullable restore
#else
        public string Address { get; set; }
#endif
        /// <summary>The appointmentStatus property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.AppointmentCreateSchema_appointmentStatus? AppointmentStatus { get; set; }
        /// <summary>Assigned User Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AssignedUserId { get; set; }
#nullable restore
#else
        public string AssignedUserId { get; set; }
#endif
        /// <summary>Calendar Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CalendarId { get; set; }
#nullable restore
#else
        public string CalendarId { get; set; }
#endif
        /// <summary>Contact Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContactId { get; set; }
#nullable restore
#else
        public string ContactId { get; set; }
#endif
        /// <summary>Appointment Description</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>End Time</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndTime { get; set; }
#nullable restore
#else
        public string EndTime { get; set; }
#endif
        /// <summary>If set to true, the minimum scheduling notice and date range would be ignored</summary>
        public bool? IgnoreDateRange { get; set; }
        /// <summary>If true the time slot validation would be avoided for any appointment creation (even the ignoreDateRange)</summary>
        public bool? IgnoreFreeSlotValidation { get; set; }
        /// <summary>Location Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LocationId { get; set; }
#nullable restore
#else
        public string LocationId { get; set; }
#endif
        /// <summary>The unique identifier for the meeting location.- This value can be found in `calendar.locationConfigurations`or `calendar.teamMembers[].locationConfigurations`</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MeetingLocationId { get; set; }
#nullable restore
#else
        public string MeetingLocationId { get; set; }
#endif
        /// <summary>Meeting location type. - If `address` is provided in the request body, the `meetingLocationType` defaults to **custom**.</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.AppointmentCreateSchema_meetingLocationType? MeetingLocationType { get; set; }
        /// <summary>Flag to override location config- **false** - If only `meetingLocationId` is provided- **true** - If only `meetingLocationType` is provided</summary>
        public bool? OverrideLocationConfig { get; set; }
        /// <summary>RRULE as per the iCalendar (RFC 5545) specification for recurring events. DTSTART is not required, instance ids are calculated on the basis of startTime of the event. The rrule only be applied if ignoreFreeSlotValidation is true.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Rrule { get; set; }
#nullable restore
#else
        public string Rrule { get; set; }
#endif
        /// <summary>Start Time</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartTime { get; set; }
#nullable restore
#else
        public string StartTime { get; set; }
#endif
        /// <summary>Title</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>If set to false, the automations will not run</summary>
        public bool? ToNotify { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.AppointmentCreateSchema"/> and sets the default values.
        /// </summary>
        public AppointmentCreateSchema()
        {
            AdditionalData = new Dictionary<string, object>();
            MeetingLocationId = "default";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.AppointmentCreateSchema"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.AppointmentCreateSchema CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.AppointmentCreateSchema();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "address", n => { Address = n.GetStringValue(); } },
                { "appointmentStatus", n => { AppointmentStatus = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.AppointmentCreateSchema_appointmentStatus>(); } },
                { "assignedUserId", n => { AssignedUserId = n.GetStringValue(); } },
                { "calendarId", n => { CalendarId = n.GetStringValue(); } },
                { "contactId", n => { ContactId = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "endTime", n => { EndTime = n.GetStringValue(); } },
                { "ignoreDateRange", n => { IgnoreDateRange = n.GetBoolValue(); } },
                { "ignoreFreeSlotValidation", n => { IgnoreFreeSlotValidation = n.GetBoolValue(); } },
                { "locationId", n => { LocationId = n.GetStringValue(); } },
                { "meetingLocationId", n => { MeetingLocationId = n.GetStringValue(); } },
                { "meetingLocationType", n => { MeetingLocationType = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.AppointmentCreateSchema_meetingLocationType>(); } },
                { "overrideLocationConfig", n => { OverrideLocationConfig = n.GetBoolValue(); } },
                { "rrule", n => { Rrule = n.GetStringValue(); } },
                { "startTime", n => { StartTime = n.GetStringValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "toNotify", n => { ToNotify = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("address", Address);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.AppointmentCreateSchema_appointmentStatus>("appointmentStatus", AppointmentStatus);
            writer.WriteStringValue("assignedUserId", AssignedUserId);
            writer.WriteStringValue("calendarId", CalendarId);
            writer.WriteStringValue("contactId", ContactId);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("endTime", EndTime);
            writer.WriteBoolValue("ignoreDateRange", IgnoreDateRange);
            writer.WriteBoolValue("ignoreFreeSlotValidation", IgnoreFreeSlotValidation);
            writer.WriteStringValue("locationId", LocationId);
            writer.WriteStringValue("meetingLocationId", MeetingLocationId);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.AppointmentCreateSchema_meetingLocationType>("meetingLocationType", MeetingLocationType);
            writer.WriteBoolValue("overrideLocationConfig", OverrideLocationConfig);
            writer.WriteStringValue("rrule", Rrule);
            writer.WriteStringValue("startTime", StartTime);
            writer.WriteStringValue("title", Title);
            writer.WriteBoolValue("toNotify", ToNotify);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
