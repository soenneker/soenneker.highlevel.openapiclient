// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class GetMessageResponseDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Alternative identifier for the message</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AltId { get; set; }
#nullable restore
#else
        public string AltId { get; set; }
#endif
        /// <summary>An array of attachment URLs. Attachments will be empty for Call and Voicemails, type 1 and 10. Please use get call recording API to fetch call recording and voicemails.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Attachments { get; set; }
#nullable restore
#else
        public List<string> Attachments { get; set; }
#endif
        /// <summary>The body property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Body { get; set; }
#nullable restore
#else
        public string Body { get; set; }
#endif
        /// <summary>Chat Widget Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ChatWidgetId { get; set; }
#nullable restore
#else
        public string ChatWidgetId { get; set; }
#endif
        /// <summary>The contactId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContactId { get; set; }
#nullable restore
#else
        public string ContactId { get; set; }
#endif
        /// <summary>The contentType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContentType { get; set; }
#nullable restore
#else
        public string ContentType { get; set; }
#endif
        /// <summary>The conversationId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ConversationId { get; set; }
#nullable restore
#else
        public string ConversationId { get; set; }
#endif
        /// <summary>Conversation Provider Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ConversationProviderId { get; set; }
#nullable restore
#else
        public string ConversationProviderId { get; set; }
#endif
        /// <summary>The dateAdded property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DateAdded { get; set; }
#nullable restore
#else
        public string DateAdded { get; set; }
#endif
        /// <summary>The direction property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetMessageResponseDto_direction? Direction { get; set; }
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The locationId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LocationId { get; set; }
#nullable restore
#else
        public string LocationId { get; set; }
#endif
        /// <summary>Type of the message as a string</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetMessageResponseDto_messageType? MessageType { get; set; }
        /// <summary>The meta property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.MessageMeta? Meta { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.MessageMeta Meta { get; set; }
#endif
        /// <summary>Message source</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetMessageResponseDto_source? Source { get; set; }
        /// <summary>The status property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetMessageResponseDto_status? Status { get; set; }
        /// <summary>The type property</summary>
        public double? Type { get; set; }
        /// <summary>User Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserId { get; set; }
#nullable restore
#else
        public string UserId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.GetMessageResponseDto"/> and sets the default values.
        /// </summary>
        public GetMessageResponseDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.GetMessageResponseDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.GetMessageResponseDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.GetMessageResponseDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "altId", n => { AltId = n.GetStringValue(); } },
                { "attachments", n => { Attachments = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "body", n => { Body = n.GetStringValue(); } },
                { "chatWidgetId", n => { ChatWidgetId = n.GetStringValue(); } },
                { "contactId", n => { ContactId = n.GetStringValue(); } },
                { "contentType", n => { ContentType = n.GetStringValue(); } },
                { "conversationId", n => { ConversationId = n.GetStringValue(); } },
                { "conversationProviderId", n => { ConversationProviderId = n.GetStringValue(); } },
                { "dateAdded", n => { DateAdded = n.GetStringValue(); } },
                { "direction", n => { Direction = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetMessageResponseDto_direction>(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "locationId", n => { LocationId = n.GetStringValue(); } },
                { "messageType", n => { MessageType = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetMessageResponseDto_messageType>(); } },
                { "meta", n => { Meta = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.MessageMeta>(global::Soenneker.HighLevel.OpenApiClient.Models.MessageMeta.CreateFromDiscriminatorValue); } },
                { "source", n => { Source = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetMessageResponseDto_source>(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetMessageResponseDto_status>(); } },
                { "type", n => { Type = n.GetDoubleValue(); } },
                { "userId", n => { UserId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("altId", AltId);
            writer.WriteCollectionOfPrimitiveValues<string>("attachments", Attachments);
            writer.WriteStringValue("body", Body);
            writer.WriteStringValue("chatWidgetId", ChatWidgetId);
            writer.WriteStringValue("contactId", ContactId);
            writer.WriteStringValue("contentType", ContentType);
            writer.WriteStringValue("conversationId", ConversationId);
            writer.WriteStringValue("conversationProviderId", ConversationProviderId);
            writer.WriteStringValue("dateAdded", DateAdded);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetMessageResponseDto_direction>("direction", Direction);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("locationId", LocationId);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetMessageResponseDto_messageType>("messageType", MessageType);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.MessageMeta>("meta", Meta);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetMessageResponseDto_source>("source", Source);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetMessageResponseDto_status>("status", Status);
            writer.WriteDoubleValue("type", Type);
            writer.WriteStringValue("userId", UserId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
