// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CalendarResourceByIdResponseDTO : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Calendar IDs</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? CalendarIds { get; set; }
#nullable restore
#else
        public List<string> CalendarIds { get; set; }
#endif
        /// <summary>Capacity of the resource</summary>
        public double? Capacity { get; set; }
        /// <summary>Description of the resource</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Whether the resource is active</summary>
        public bool? IsActive { get; set; }
        /// <summary>Location ID of the resource</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LocationId { get; set; }
#nullable restore
#else
        public string LocationId { get; set; }
#endif
        /// <summary>Name of the resource</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Indicates if the resource is out of service</summary>
        public double? OutOfService { get; set; }
        /// <summary>Quantity of the resource</summary>
        public double? Quantity { get; set; }
        /// <summary>The resourceType property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.CalendarResourceByIdResponseDTO_resourceType? ResourceType { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.CalendarResourceByIdResponseDTO"/> and sets the default values.
        /// </summary>
        public CalendarResourceByIdResponseDTO()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.CalendarResourceByIdResponseDTO"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.CalendarResourceByIdResponseDTO CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.CalendarResourceByIdResponseDTO();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "calendarIds", n => { CalendarIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "capacity", n => { Capacity = n.GetDoubleValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "isActive", n => { IsActive = n.GetBoolValue(); } },
                { "locationId", n => { LocationId = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "outOfService", n => { OutOfService = n.GetDoubleValue(); } },
                { "quantity", n => { Quantity = n.GetDoubleValue(); } },
                { "resourceType", n => { ResourceType = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.CalendarResourceByIdResponseDTO_resourceType>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("calendarIds", CalendarIds);
            writer.WriteDoubleValue("capacity", Capacity);
            writer.WriteStringValue("description", Description);
            writer.WriteBoolValue("isActive", IsActive);
            writer.WriteStringValue("locationId", LocationId);
            writer.WriteStringValue("name", Name);
            writer.WriteDoubleValue("outOfService", OutOfService);
            writer.WriteDoubleValue("quantity", Quantity);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.CalendarResourceByIdResponseDTO_resourceType>("resourceType", ResourceType);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
