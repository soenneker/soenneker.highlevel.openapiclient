// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CustomRRuleOptionsDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Max number of task executions</summary>
        public double? Count { get; set; }
        /// <summary>-1, 1, 2, 3, ..., 27, 28</summary>
        public double? DayOfMonth { get; set; }
        /// <summary>The dayOfWeek property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.CustomRRuleOptionsDto_dayOfWeek? DayOfWeek { get; set; }
        /// <summary>Execute task number of days before</summary>
        public double? DaysBefore { get; set; }
        /// <summary>End date in YYYY-MM-DD format</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndDate { get; set; }
#nullable restore
#else
        public string EndDate { get; set; }
#endif
        /// <summary>End time in HH:mm:ss format</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndTime { get; set; }
#nullable restore
#else
        public string EndTime { get; set; }
#endif
        /// <summary>End type like after, by, count</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndType { get; set; }
#nullable restore
#else
        public string EndType { get; set; }
#endif
        /// <summary>The interval property</summary>
        public double? Interval { get; set; }
        /// <summary>The intervalType property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.CustomRRuleOptionsDto_intervalType? IntervalType { get; set; }
        /// <summary>The monthOfYear property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.CustomRRuleOptionsDto_monthOfYear? MonthOfYear { get; set; }
        /// <summary>-1, 1, 2, 3, 4</summary>
        public double? NumOfWeek { get; set; }
        /// <summary>Start date in YYYY-MM-DD format</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartDate { get; set; }
#nullable restore
#else
        public string StartDate { get; set; }
#endif
        /// <summary>Start time in HH:mm:ss format</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartTime { get; set; }
#nullable restore
#else
        public string StartTime { get; set; }
#endif
        /// <summary>Start as primary user accepted date</summary>
        public bool? UseStartAsPrimaryUserAccepted { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.CustomRRuleOptionsDto"/> and sets the default values.
        /// </summary>
        public CustomRRuleOptionsDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.CustomRRuleOptionsDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.CustomRRuleOptionsDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.CustomRRuleOptionsDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "count", n => { Count = n.GetDoubleValue(); } },
                { "dayOfMonth", n => { DayOfMonth = n.GetDoubleValue(); } },
                { "dayOfWeek", n => { DayOfWeek = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.CustomRRuleOptionsDto_dayOfWeek>(); } },
                { "daysBefore", n => { DaysBefore = n.GetDoubleValue(); } },
                { "endDate", n => { EndDate = n.GetStringValue(); } },
                { "endTime", n => { EndTime = n.GetStringValue(); } },
                { "endType", n => { EndType = n.GetStringValue(); } },
                { "interval", n => { Interval = n.GetDoubleValue(); } },
                { "intervalType", n => { IntervalType = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.CustomRRuleOptionsDto_intervalType>(); } },
                { "monthOfYear", n => { MonthOfYear = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.CustomRRuleOptionsDto_monthOfYear>(); } },
                { "numOfWeek", n => { NumOfWeek = n.GetDoubleValue(); } },
                { "startDate", n => { StartDate = n.GetStringValue(); } },
                { "startTime", n => { StartTime = n.GetStringValue(); } },
                { "useStartAsPrimaryUserAccepted", n => { UseStartAsPrimaryUserAccepted = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("count", Count);
            writer.WriteDoubleValue("dayOfMonth", DayOfMonth);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.CustomRRuleOptionsDto_dayOfWeek>("dayOfWeek", DayOfWeek);
            writer.WriteDoubleValue("daysBefore", DaysBefore);
            writer.WriteStringValue("endDate", EndDate);
            writer.WriteStringValue("endTime", EndTime);
            writer.WriteStringValue("endType", EndType);
            writer.WriteDoubleValue("interval", Interval);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.CustomRRuleOptionsDto_intervalType>("intervalType", IntervalType);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.CustomRRuleOptionsDto_monthOfYear>("monthOfYear", MonthOfYear);
            writer.WriteDoubleValue("numOfWeek", NumOfWeek);
            writer.WriteStringValue("startDate", StartDate);
            writer.WriteStringValue("startTime", StartTime);
            writer.WriteBoolValue("useStartAsPrimaryUserAccepted", UseStartAsPrimaryUserAccepted);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
