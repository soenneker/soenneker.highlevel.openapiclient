// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class GetOrderResponseSchema : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>AltId is the unique identifier eg: location id.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AltId { get; set; }
#nullable restore
#else
        public string AltId { get; set; }
#endif
        /// <summary>AltType is the type of identifier.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AltType { get; set; }
#nullable restore
#else
        public string AltType { get; set; }
#endif
        /// <summary>Order value.</summary>
        public double? Amount { get; set; }
        /// <summary>Amount details of the order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_amountSummary? AmountSummary { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_amountSummary AmountSummary { get; set; }
#endif
        /// <summary>Automatic taxes applied for the Order</summary>
        public bool? AutomaticTaxesCalculated { get; set; }
        /// <summary>Contact id corresponding to the order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContactId { get; set; }
#nullable restore
#else
        public string ContactId { get; set; }
#endif
        /// <summary>Contact details of the order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_contactSnapshot? ContactSnapshot { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_contactSnapshot ContactSnapshot { get; set; }
#endif
        /// <summary>Coupon details of the order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_coupon? Coupon { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_coupon Coupon { get; set; }
#endif
        /// <summary>The creation timestamp of the order.</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Currency in which order was created.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>Fingerprint id of the order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Fingerprint { get; set; }
#nullable restore
#else
        public string Fingerprint { get; set; }
#endif
        /// <summary>Fulfillment status of the order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FulfillmentStatus { get; set; }
#nullable restore
#else
        public string FulfillmentStatus { get; set; }
#endif
        /// <summary>The unique identifier for the order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Item details of the order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Items { get; set; }
#nullable restore
#else
        public List<string> Items { get; set; }
#endif
        /// <summary>Order is in live / test mode.</summary>
        public bool? LiveMode { get; set; }
        /// <summary>Is test order.</summary>
        public bool? MarkAsTest { get; set; }
        /// <summary>Meta details of the order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_meta? Meta { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_meta Meta { get; set; }
#endif
        /// <summary>Source details of the order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_source? Source { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_source Source { get; set; }
#endif
        /// <summary>The status of the order (e.g., completed).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>Provider name for automatic tax calculation</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_taxCalculationProvider? TaxCalculationProvider { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_taxCalculationProvider TaxCalculationProvider { get; set; }
#endif
        /// <summary>Trace id of the order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TraceId { get; set; }
#nullable restore
#else
        public string TraceId { get; set; }
#endif
        /// <summary>Tracking id of the order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TrackingId { get; set; }
#nullable restore
#else
        public string TrackingId { get; set; }
#endif
        /// <summary>The last update timestamp of the order.</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema"/> and sets the default values.
        /// </summary>
        public GetOrderResponseSchema()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "altId", n => { AltId = n.GetStringValue(); } },
                { "altType", n => { AltType = n.GetStringValue(); } },
                { "amount", n => { Amount = n.GetDoubleValue(); } },
                { "amountSummary", n => { AmountSummary = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_amountSummary>(global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_amountSummary.CreateFromDiscriminatorValue); } },
                { "automaticTaxesCalculated", n => { AutomaticTaxesCalculated = n.GetBoolValue(); } },
                { "contactId", n => { ContactId = n.GetStringValue(); } },
                { "contactSnapshot", n => { ContactSnapshot = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_contactSnapshot>(global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_contactSnapshot.CreateFromDiscriminatorValue); } },
                { "coupon", n => { Coupon = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_coupon>(global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_coupon.CreateFromDiscriminatorValue); } },
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "fingerprint", n => { Fingerprint = n.GetStringValue(); } },
                { "fulfillmentStatus", n => { FulfillmentStatus = n.GetStringValue(); } },
                { "_id", n => { Id = n.GetStringValue(); } },
                { "items", n => { Items = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "liveMode", n => { LiveMode = n.GetBoolValue(); } },
                { "markAsTest", n => { MarkAsTest = n.GetBoolValue(); } },
                { "meta", n => { Meta = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_meta>(global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_meta.CreateFromDiscriminatorValue); } },
                { "source", n => { Source = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_source>(global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_source.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetStringValue(); } },
                { "taxCalculationProvider", n => { TaxCalculationProvider = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_taxCalculationProvider>(global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_taxCalculationProvider.CreateFromDiscriminatorValue); } },
                { "traceId", n => { TraceId = n.GetStringValue(); } },
                { "trackingId", n => { TrackingId = n.GetStringValue(); } },
                { "updatedAt", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("altId", AltId);
            writer.WriteStringValue("altType", AltType);
            writer.WriteDoubleValue("amount", Amount);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_amountSummary>("amountSummary", AmountSummary);
            writer.WriteBoolValue("automaticTaxesCalculated", AutomaticTaxesCalculated);
            writer.WriteStringValue("contactId", ContactId);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_contactSnapshot>("contactSnapshot", ContactSnapshot);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_coupon>("coupon", Coupon);
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteStringValue("currency", Currency);
            writer.WriteStringValue("fingerprint", Fingerprint);
            writer.WriteStringValue("fulfillmentStatus", FulfillmentStatus);
            writer.WriteStringValue("_id", Id);
            writer.WriteCollectionOfPrimitiveValues<string>("items", Items);
            writer.WriteBoolValue("liveMode", LiveMode);
            writer.WriteBoolValue("markAsTest", MarkAsTest);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_meta>("meta", Meta);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_source>("source", Source);
            writer.WriteStringValue("status", Status);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.GetOrderResponseSchema_taxCalculationProvider>("taxCalculationProvider", TaxCalculationProvider);
            writer.WriteStringValue("traceId", TraceId);
            writer.WriteStringValue("trackingId", TrackingId);
            writer.WriteDateTimeOffsetValue("updatedAt", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
