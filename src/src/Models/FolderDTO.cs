// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class FolderDTO : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Location identifier that owns this folder</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AltId { get; set; }
#nullable restore
#else
        public string AltId { get; set; }
#endif
        /// <summary>Type of entity that owns the folder</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.FolderDTO_altType? AltType { get; set; }
        /// <summary>Whether this is a system-generated application folder</summary>
        public bool? AppFolder { get; set; }
        /// <summary>Primary category of content stored in the folder</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Category { get; set; }
#nullable restore
#else
        public string Category { get; set; }
#endif
        /// <summary>Whether the folder has been deleted</summary>
        public bool? Deleted { get; set; }
        /// <summary>Whether the folder is essential and should not be deleted</summary>
        public bool? IsEssential { get; set; }
        /// <summary>Whether the folder is private and not publicly accessible</summary>
        public bool? IsPrivate { get; set; }
        /// <summary>ID of the user who last updated the folder</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastUpdatedBy { get; set; }
#nullable restore
#else
        public string LastUpdatedBy { get; set; }
#endif
        /// <summary>Whether the data migration process has been completed for this folder</summary>
        public bool? MigrationCompleted { get; set; }
        /// <summary>Name of the folder</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>ID of the parent folder (null for root folders)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentId { get; set; }
#nullable restore
#else
        public string ParentId { get; set; }
#endif
        /// <summary>Whether there are pending uploads to this folder</summary>
        public bool? PendingUpload { get; set; }
        /// <summary>Whether the folder has been moved from its original location</summary>
        public bool? RelocatedFolder { get; set; }
        /// <summary>Current status of the folder</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>Sub-category of content stored in the folder</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubCategory { get; set; }
#nullable restore
#else
        public string SubCategory { get; set; }
#endif
        /// <summary>Type of the object (always &apos;folder&apos; for folders)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.FolderDTO"/> and sets the default values.
        /// </summary>
        public FolderDTO()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.FolderDTO"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.FolderDTO CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.FolderDTO();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "altId", n => { AltId = n.GetStringValue(); } },
                { "altType", n => { AltType = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.FolderDTO_altType>(); } },
                { "appFolder", n => { AppFolder = n.GetBoolValue(); } },
                { "category", n => { Category = n.GetStringValue(); } },
                { "deleted", n => { Deleted = n.GetBoolValue(); } },
                { "isEssential", n => { IsEssential = n.GetBoolValue(); } },
                { "isPrivate", n => { IsPrivate = n.GetBoolValue(); } },
                { "lastUpdatedBy", n => { LastUpdatedBy = n.GetStringValue(); } },
                { "migrationCompleted", n => { MigrationCompleted = n.GetBoolValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "parentId", n => { ParentId = n.GetStringValue(); } },
                { "pendingUpload", n => { PendingUpload = n.GetBoolValue(); } },
                { "relocatedFolder", n => { RelocatedFolder = n.GetBoolValue(); } },
                { "status", n => { Status = n.GetStringValue(); } },
                { "subCategory", n => { SubCategory = n.GetStringValue(); } },
                { "type", n => { Type = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("altId", AltId);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.FolderDTO_altType>("altType", AltType);
            writer.WriteBoolValue("appFolder", AppFolder);
            writer.WriteStringValue("category", Category);
            writer.WriteBoolValue("deleted", Deleted);
            writer.WriteBoolValue("isEssential", IsEssential);
            writer.WriteBoolValue("isPrivate", IsPrivate);
            writer.WriteStringValue("lastUpdatedBy", LastUpdatedBy);
            writer.WriteBoolValue("migrationCompleted", MigrationCompleted);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("parentId", ParentId);
            writer.WriteBoolValue("pendingUpload", PendingUpload);
            writer.WriteBoolValue("relocatedFolder", RelocatedFolder);
            writer.WriteStringValue("status", Status);
            writer.WriteStringValue("subCategory", SubCategory);
            writer.WriteStringValue("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
