// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class RecipientItem : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Recipient contact name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContactName { get; set; }
#nullable restore
#else
        public string ContactName { get; set; }
#endif
        /// <summary>Recipient country</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Country { get; set; }
#nullable restore
#else
        public string Country { get; set; }
#endif
        /// <summary>Recipient Email</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>Recipient entity name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EntityName { get; set; }
#nullable restore
#else
        public string EntityName { get; set; }
#endif
        /// <summary>Recipient First Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstName { get; set; }
#nullable restore
#else
        public string FirstName { get; set; }
#endif
        /// <summary>Recipient has completed the document</summary>
        public bool? HasCompleted { get; set; }
        /// <summary>Recipient Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Recipient image url</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImgUrl { get; set; }
#nullable restore
#else
        public string ImgUrl { get; set; }
#endif
        /// <summary>Recipient initials image url</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InitialsImgUrl { get; set; }
#nullable restore
#else
        public string InitialsImgUrl { get; set; }
#endif
        /// <summary>Recipient ip</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Ip { get; set; }
#nullable restore
#else
        public string Ip { get; set; }
#endif
        /// <summary>Recipient is primary</summary>
        public bool? IsPrimary { get; set; }
        /// <summary>Recipient Last Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastName { get; set; }
#nullable restore
#else
        public string LastName { get; set; }
#endif
        /// <summary>Recipient last viewed date</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastViewedAt { get; set; }
#nullable restore
#else
        public string LastViewedAt { get; set; }
#endif
        /// <summary>Recipient Phone</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Phone { get; set; }
#nullable restore
#else
        public string Phone { get; set; }
#endif
        /// <summary>Recipient Phone Number</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PhoneNumber { get; set; }
#nullable restore
#else
        public string PhoneNumber { get; set; }
#endif
        /// <summary>Recipient role</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.RecipientItem_role? Role { get; set; }
        /// <summary>Share link</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ShareLink { get; set; }
#nullable restore
#else
        public string ShareLink { get; set; }
#endif
        /// <summary>Recipient signed date</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SignedDate { get; set; }
#nullable restore
#else
        public string SignedDate { get; set; }
#endif
        /// <summary>Recipient signing order</summary>
        public double? SigningOrder { get; set; }
        /// <summary>Recipient user agent</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserAgent { get; set; }
#nullable restore
#else
        public string UserAgent { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.RecipientItem"/> and sets the default values.
        /// </summary>
        public RecipientItem()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.RecipientItem"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.RecipientItem CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.RecipientItem();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "contactName", n => { ContactName = n.GetStringValue(); } },
                { "country", n => { Country = n.GetStringValue(); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "entityName", n => { EntityName = n.GetStringValue(); } },
                { "firstName", n => { FirstName = n.GetStringValue(); } },
                { "hasCompleted", n => { HasCompleted = n.GetBoolValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "imgUrl", n => { ImgUrl = n.GetStringValue(); } },
                { "initialsImgUrl", n => { InitialsImgUrl = n.GetStringValue(); } },
                { "ip", n => { Ip = n.GetStringValue(); } },
                { "isPrimary", n => { IsPrimary = n.GetBoolValue(); } },
                { "lastName", n => { LastName = n.GetStringValue(); } },
                { "lastViewedAt", n => { LastViewedAt = n.GetStringValue(); } },
                { "phone", n => { Phone = n.GetStringValue(); } },
                { "phoneNumber", n => { PhoneNumber = n.GetStringValue(); } },
                { "role", n => { Role = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.RecipientItem_role>(); } },
                { "shareLink", n => { ShareLink = n.GetStringValue(); } },
                { "signedDate", n => { SignedDate = n.GetStringValue(); } },
                { "signingOrder", n => { SigningOrder = n.GetDoubleValue(); } },
                { "userAgent", n => { UserAgent = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("contactName", ContactName);
            writer.WriteStringValue("country", Country);
            writer.WriteStringValue("email", Email);
            writer.WriteStringValue("entityName", EntityName);
            writer.WriteStringValue("firstName", FirstName);
            writer.WriteBoolValue("hasCompleted", HasCompleted);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("imgUrl", ImgUrl);
            writer.WriteStringValue("initialsImgUrl", InitialsImgUrl);
            writer.WriteStringValue("ip", Ip);
            writer.WriteBoolValue("isPrimary", IsPrimary);
            writer.WriteStringValue("lastName", LastName);
            writer.WriteStringValue("lastViewedAt", LastViewedAt);
            writer.WriteStringValue("phone", Phone);
            writer.WriteStringValue("phoneNumber", PhoneNumber);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.RecipientItem_role>("role", Role);
            writer.WriteStringValue("shareLink", ShareLink);
            writer.WriteStringValue("signedDate", SignedDate);
            writer.WriteDoubleValue("signingOrder", SigningOrder);
            writer.WriteStringValue("userAgent", UserAgent);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
