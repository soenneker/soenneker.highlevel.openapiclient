// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class BulkEditProductDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Automatic tax category ID</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AutomaticTaxCategoryId { get; set; }
#nullable restore
#else
        public string AutomaticTaxCategoryId { get; set; }
#endif
        /// <summary>Product availability in store</summary>
        public bool? AvailableInStore { get; set; }
        /// <summary>Collection IDs</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? CollectionIds { get; set; }
#nullable restore
#else
        public List<string> CollectionIds { get; set; }
#endif
        /// <summary>Product description</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Product ID</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Product image</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Image { get; set; }
#nullable restore
#else
        public string Image { get; set; }
#endif
        /// <summary>Enable product label</summary>
        public bool? IsLabelEnabled { get; set; }
        /// <summary>Enable taxes</summary>
        public bool? IsTaxesEnabled { get; set; }
        /// <summary>Product label</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_label? Label { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_label Label { get; set; }
#endif
        /// <summary>Product media</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_medias>? Medias { get; set; }
#nullable restore
#else
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_medias> Medias { get; set; }
#endif
        /// <summary>Product name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Array of price variants for the product</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditPriceDto>? Prices { get; set; }
#nullable restore
#else
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditPriceDto> Prices { get; set; }
#endif
        /// <summary>SEO metadata for the product</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_seo? Seo { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_seo Seo { get; set; }
#endif
        /// <summary>Product URL slug</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Slug { get; set; }
#nullable restore
#else
        public string Slug { get; set; }
#endif
        /// <summary>Product taxes</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_taxes>? Taxes { get; set; }
#nullable restore
#else
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_taxes> Taxes { get; set; }
#endif
        /// <summary>Tax inclusive pricing</summary>
        public bool? TaxInclusive { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto"/> and sets the default values.
        /// </summary>
        public BulkEditProductDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "automaticTaxCategoryId", n => { AutomaticTaxCategoryId = n.GetStringValue(); } },
                { "availableInStore", n => { AvailableInStore = n.GetBoolValue(); } },
                { "collectionIds", n => { CollectionIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "_id", n => { Id = n.GetStringValue(); } },
                { "image", n => { Image = n.GetStringValue(); } },
                { "isLabelEnabled", n => { IsLabelEnabled = n.GetBoolValue(); } },
                { "isTaxesEnabled", n => { IsTaxesEnabled = n.GetBoolValue(); } },
                { "label", n => { Label = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_label>(global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_label.CreateFromDiscriminatorValue); } },
                { "medias", n => { Medias = n.GetCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_medias>(global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_medias.CreateFromDiscriminatorValue)?.AsList(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "prices", n => { Prices = n.GetCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditPriceDto>(global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditPriceDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "seo", n => { Seo = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_seo>(global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_seo.CreateFromDiscriminatorValue); } },
                { "slug", n => { Slug = n.GetStringValue(); } },
                { "taxInclusive", n => { TaxInclusive = n.GetBoolValue(); } },
                { "taxes", n => { Taxes = n.GetCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_taxes>(global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_taxes.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("automaticTaxCategoryId", AutomaticTaxCategoryId);
            writer.WriteBoolValue("availableInStore", AvailableInStore);
            writer.WriteCollectionOfPrimitiveValues<string>("collectionIds", CollectionIds);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("_id", Id);
            writer.WriteStringValue("image", Image);
            writer.WriteBoolValue("isLabelEnabled", IsLabelEnabled);
            writer.WriteBoolValue("isTaxesEnabled", IsTaxesEnabled);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_label>("label", Label);
            writer.WriteCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_medias>("medias", Medias);
            writer.WriteStringValue("name", Name);
            writer.WriteCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditPriceDto>("prices", Prices);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_seo>("seo", Seo);
            writer.WriteStringValue("slug", Slug);
            writer.WriteCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.BulkEditProductDto_taxes>("taxes", Taxes);
            writer.WriteBoolValue("taxInclusive", TaxInclusive);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
