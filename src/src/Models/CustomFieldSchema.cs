// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CustomFieldSchema : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The dataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DataType { get; set; }
#nullable restore
#else
        public string DataType { get; set; }
#endif
        /// <summary>The fieldKey property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FieldKey { get; set; }
#nullable restore
#else
        public string FieldKey { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The isAllowedCustomOption property</summary>
        public bool? IsAllowedCustomOption { get; set; }
        /// <summary>The isMultiFileAllowed property</summary>
        public bool? IsMultiFileAllowed { get; set; }
        /// <summary>The locationId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LocationId { get; set; }
#nullable restore
#else
        public string LocationId { get; set; }
#endif
        /// <summary>The maxFileLimit property</summary>
        public double? MaxFileLimit { get; set; }
        /// <summary>Model of the custom field</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.CustomFieldSchema_model? Model { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The picklistImageOptions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? PicklistImageOptions { get; set; }
#nullable restore
#else
        public List<string> PicklistImageOptions { get; set; }
#endif
        /// <summary>The picklistOptions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? PicklistOptions { get; set; }
#nullable restore
#else
        public List<string> PicklistOptions { get; set; }
#endif
        /// <summary>The placeholder property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Placeholder { get; set; }
#nullable restore
#else
        public string Placeholder { get; set; }
#endif
        /// <summary>The position property</summary>
        public double? Position { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.CustomFieldSchema"/> and sets the default values.
        /// </summary>
        public CustomFieldSchema()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.CustomFieldSchema"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.CustomFieldSchema CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.CustomFieldSchema();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "dataType", n => { DataType = n.GetStringValue(); } },
                { "fieldKey", n => { FieldKey = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "isAllowedCustomOption", n => { IsAllowedCustomOption = n.GetBoolValue(); } },
                { "isMultiFileAllowed", n => { IsMultiFileAllowed = n.GetBoolValue(); } },
                { "locationId", n => { LocationId = n.GetStringValue(); } },
                { "maxFileLimit", n => { MaxFileLimit = n.GetDoubleValue(); } },
                { "model", n => { Model = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.CustomFieldSchema_model>(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "picklistImageOptions", n => { PicklistImageOptions = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "picklistOptions", n => { PicklistOptions = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "placeholder", n => { Placeholder = n.GetStringValue(); } },
                { "position", n => { Position = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("dataType", DataType);
            writer.WriteStringValue("fieldKey", FieldKey);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("isAllowedCustomOption", IsAllowedCustomOption);
            writer.WriteBoolValue("isMultiFileAllowed", IsMultiFileAllowed);
            writer.WriteStringValue("locationId", LocationId);
            writer.WriteDoubleValue("maxFileLimit", MaxFileLimit);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.CustomFieldSchema_model>("model", Model);
            writer.WriteStringValue("name", Name);
            writer.WriteCollectionOfPrimitiveValues<string>("picklistImageOptions", PicklistImageOptions);
            writer.WriteCollectionOfPrimitiveValues<string>("picklistOptions", PicklistOptions);
            writer.WriteStringValue("placeholder", Placeholder);
            writer.WriteDoubleValue("position", Position);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
