// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AttributionSource : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The campaign property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Campaign { get; set; }
#nullable restore
#else
        public string Campaign { get; set; }
#endif
        /// <summary>The campaignId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CampaignId { get; set; }
#nullable restore
#else
        public string CampaignId { get; set; }
#endif
        /// <summary>The dclid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Dclid { get; set; }
#nullable restore
#else
        public string Dclid { get; set; }
#endif
        /// <summary>The fbc property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Fbc { get; set; }
#nullable restore
#else
        public string Fbc { get; set; }
#endif
        /// <summary>The fbclid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Fbclid { get; set; }
#nullable restore
#else
        public string Fbclid { get; set; }
#endif
        /// <summary>The fbEventId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FbEventId { get; set; }
#nullable restore
#else
        public string FbEventId { get; set; }
#endif
        /// <summary>The fbp property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Fbp { get; set; }
#nullable restore
#else
        public string Fbp { get; set; }
#endif
        /// <summary>The gclid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Gclid { get; set; }
#nullable restore
#else
        public string Gclid { get; set; }
#endif
        /// <summary>The ip property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Ip { get; set; }
#nullable restore
#else
        public string Ip { get; set; }
#endif
        /// <summary>The medium property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Medium { get; set; }
#nullable restore
#else
        public string Medium { get; set; }
#endif
        /// <summary>The mediumId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MediumId { get; set; }
#nullable restore
#else
        public string MediumId { get; set; }
#endif
        /// <summary>The msclikid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Msclikid { get; set; }
#nullable restore
#else
        public string Msclikid { get; set; }
#endif
        /// <summary>The referrer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Referrer { get; set; }
#nullable restore
#else
        public string Referrer { get; set; }
#endif
        /// <summary>The url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>The userAgent property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserAgent { get; set; }
#nullable restore
#else
        public string UserAgent { get; set; }
#endif
        /// <summary>The utmContent property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UtmContent { get; set; }
#nullable restore
#else
        public string UtmContent { get; set; }
#endif
        /// <summary>The utmMedium property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UtmMedium { get; set; }
#nullable restore
#else
        public string UtmMedium { get; set; }
#endif
        /// <summary>The utmSource property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UtmSource { get; set; }
#nullable restore
#else
        public string UtmSource { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.AttributionSource"/> and sets the default values.
        /// </summary>
        public AttributionSource()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.AttributionSource"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.AttributionSource CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.AttributionSource();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "campaign", n => { Campaign = n.GetStringValue(); } },
                { "campaignId", n => { CampaignId = n.GetStringValue(); } },
                { "dclid", n => { Dclid = n.GetStringValue(); } },
                { "fbEventId", n => { FbEventId = n.GetStringValue(); } },
                { "fbc", n => { Fbc = n.GetStringValue(); } },
                { "fbclid", n => { Fbclid = n.GetStringValue(); } },
                { "fbp", n => { Fbp = n.GetStringValue(); } },
                { "gclid", n => { Gclid = n.GetStringValue(); } },
                { "ip", n => { Ip = n.GetStringValue(); } },
                { "medium", n => { Medium = n.GetStringValue(); } },
                { "mediumId", n => { MediumId = n.GetStringValue(); } },
                { "msclikid", n => { Msclikid = n.GetStringValue(); } },
                { "referrer", n => { Referrer = n.GetStringValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
                { "userAgent", n => { UserAgent = n.GetStringValue(); } },
                { "utmContent", n => { UtmContent = n.GetStringValue(); } },
                { "utmMedium", n => { UtmMedium = n.GetStringValue(); } },
                { "utmSource", n => { UtmSource = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("campaign", Campaign);
            writer.WriteStringValue("campaignId", CampaignId);
            writer.WriteStringValue("dclid", Dclid);
            writer.WriteStringValue("fbc", Fbc);
            writer.WriteStringValue("fbclid", Fbclid);
            writer.WriteStringValue("fbEventId", FbEventId);
            writer.WriteStringValue("fbp", Fbp);
            writer.WriteStringValue("gclid", Gclid);
            writer.WriteStringValue("ip", Ip);
            writer.WriteStringValue("medium", Medium);
            writer.WriteStringValue("mediumId", MediumId);
            writer.WriteStringValue("msclikid", Msclikid);
            writer.WriteStringValue("referrer", Referrer);
            writer.WriteStringValue("url", Url);
            writer.WriteStringValue("userAgent", UserAgent);
            writer.WriteStringValue("utmContent", UtmContent);
            writer.WriteStringValue("utmMedium", UtmMedium);
            writer.WriteStringValue("utmSource", UtmSource);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
