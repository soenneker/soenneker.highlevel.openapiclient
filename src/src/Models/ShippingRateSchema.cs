// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ShippingRateSchema : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Location Id or Agency Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AltId { get; set; }
#nullable restore
#else
        public string AltId { get; set; }
#endif
        /// <summary>The altType property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.ShippingRateSchema_altType? AltType { get; set; }
        /// <summary>The amount of the shipping rate if it is normal rate (0 means free ). Fixed Handling fee if it is a carrier rate (it will add to the carrier rate).</summary>
        public double? Amount { get; set; }
        /// <summary>Type of condition to provide the conditional pricing</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.ShippingRateSchema_conditionType? ConditionType { get; set; }
        /// <summary>created at</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedAt { get; set; }
#nullable restore
#else
        public string CreatedAt { get; set; }
#endif
        /// <summary>The currency of the amount of the rate / handling fee</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>Delivery description</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The unique identifier for the product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>is this a carrier rate</summary>
        public bool? IsCarrierRate { get; set; }
        /// <summary>Maximum condition for applying this price. set 0 or null if there is no maximum</summary>
        public double? MaxCondition { get; set; }
        /// <summary>Minimum condition for applying this price. set 0 or null if there is no minimum</summary>
        public double? MinCondition { get; set; }
        /// <summary>Name of the shipping zone</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Percentage of rate fee if it is a carrier rate.</summary>
        public double? PercentageOfRateFee { get; set; }
        /// <summary>Shipping carrier id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ShippingCarrierId { get; set; }
#nullable restore
#else
        public string ShippingCarrierId { get; set; }
#endif
        /// <summary>An array of items</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.ShippingCarrierServiceDto>? ShippingCarrierServices { get; set; }
#nullable restore
#else
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.ShippingCarrierServiceDto> ShippingCarrierServices { get; set; }
#endif
        /// <summary>The unique identifier for the shipping zone.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ShippingZoneId { get; set; }
#nullable restore
#else
        public string ShippingZoneId { get; set; }
#endif
        /// <summary>updated at</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedAt { get; set; }
#nullable restore
#else
        public string UpdatedAt { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.ShippingRateSchema"/> and sets the default values.
        /// </summary>
        public ShippingRateSchema()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.ShippingRateSchema"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.ShippingRateSchema CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.ShippingRateSchema();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "altId", n => { AltId = n.GetStringValue(); } },
                { "altType", n => { AltType = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.ShippingRateSchema_altType>(); } },
                { "amount", n => { Amount = n.GetDoubleValue(); } },
                { "conditionType", n => { ConditionType = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.ShippingRateSchema_conditionType>(); } },
                { "createdAt", n => { CreatedAt = n.GetStringValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "_id", n => { Id = n.GetStringValue(); } },
                { "isCarrierRate", n => { IsCarrierRate = n.GetBoolValue(); } },
                { "maxCondition", n => { MaxCondition = n.GetDoubleValue(); } },
                { "minCondition", n => { MinCondition = n.GetDoubleValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "percentageOfRateFee", n => { PercentageOfRateFee = n.GetDoubleValue(); } },
                { "shippingCarrierId", n => { ShippingCarrierId = n.GetStringValue(); } },
                { "shippingCarrierServices", n => { ShippingCarrierServices = n.GetCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.ShippingCarrierServiceDto>(global::Soenneker.HighLevel.OpenApiClient.Models.ShippingCarrierServiceDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "shippingZoneId", n => { ShippingZoneId = n.GetStringValue(); } },
                { "updatedAt", n => { UpdatedAt = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("altId", AltId);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.ShippingRateSchema_altType>("altType", AltType);
            writer.WriteDoubleValue("amount", Amount);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.ShippingRateSchema_conditionType>("conditionType", ConditionType);
            writer.WriteStringValue("createdAt", CreatedAt);
            writer.WriteStringValue("currency", Currency);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("_id", Id);
            writer.WriteBoolValue("isCarrierRate", IsCarrierRate);
            writer.WriteDoubleValue("maxCondition", MaxCondition);
            writer.WriteDoubleValue("minCondition", MinCondition);
            writer.WriteStringValue("name", Name);
            writer.WriteDoubleValue("percentageOfRateFee", PercentageOfRateFee);
            writer.WriteStringValue("shippingCarrierId", ShippingCarrierId);
            writer.WriteCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.ShippingCarrierServiceDto>("shippingCarrierServices", ShippingCarrierServices);
            writer.WriteStringValue("shippingZoneId", ShippingZoneId);
            writer.WriteStringValue("updatedAt", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
