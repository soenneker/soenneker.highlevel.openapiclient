// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class TeamMember : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Marks a user as primary. This property is required in case of collective booking calendars. Only one user can be primary.</summary>
        public bool? IsPrimary { get; set; }
        /// <summary>Meeting location configuration for event calendar.- *Multiple locations are allowed only when one team member is selected.*- *For **Class booking** and **Collective** calendars, only one location configuration is allowed for each team member.*</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.LocationConfiguration>? LocationConfigurations { get; set; }
#nullable restore
#else
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.LocationConfiguration> LocationConfigurations { get; set; }
#endif
        /// <summary>ðŸš¨ Deprecated! Use `locationConfigurations.location` instead.</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MeetingLocation { get; private set; }
#nullable restore
#else
        public string MeetingLocation { get; private set; }
#endif
        /// <summary>ðŸš¨ Deprecated! Use `locationConfigurations.kind` instead.</summary>
        [Obsolete("")]
        public global::Soenneker.HighLevel.OpenApiClient.Models.TeamMember_meetingLocationType? MeetingLocationType { get; private set; }
        /// <summary>The priority property</summary>
        public double? Priority { get; set; }
        /// <summary>The userId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserId { get; set; }
#nullable restore
#else
        public string UserId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.TeamMember"/> and sets the default values.
        /// </summary>
        public TeamMember()
        {
            AdditionalData = new Dictionary<string, object>();
            MeetingLocationType = global::Soenneker.HighLevel.OpenApiClient.Models.TeamMember_meetingLocationType.Custom;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.TeamMember"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.TeamMember CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.TeamMember();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "isPrimary", n => { IsPrimary = n.GetBoolValue(); } },
                { "locationConfigurations", n => { LocationConfigurations = n.GetCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.LocationConfiguration>(global::Soenneker.HighLevel.OpenApiClient.Models.LocationConfiguration.CreateFromDiscriminatorValue)?.AsList(); } },
                { "meetingLocation", n => { MeetingLocation = n.GetStringValue(); } },
                { "meetingLocationType", n => { MeetingLocationType = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.TeamMember_meetingLocationType>(); } },
                { "priority", n => { Priority = n.GetDoubleValue(); } },
                { "userId", n => { UserId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("isPrimary", IsPrimary);
            writer.WriteCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.LocationConfiguration>("locationConfigurations", LocationConfigurations);
            writer.WriteDoubleValue("priority", Priority);
            writer.WriteStringValue("userId", UserId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
