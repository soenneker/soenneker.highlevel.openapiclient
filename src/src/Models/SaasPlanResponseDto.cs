// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SaasPlanResponseDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Array of add-ons included in the plan</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AddOns { get; set; }
#nullable restore
#else
        public List<string> AddOns { get; set; }
#endif
        /// <summary>Category ID for the plan</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CategoryId { get; set; }
#nullable restore
#else
        public string CategoryId { get; set; }
#endif
        /// <summary>Company ID associated with the SaaS plan</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CompanyId { get; set; }
#nullable restore
#else
        public string CompanyId { get; set; }
#endif
        /// <summary>Contact limit for the plan</summary>
        public double? ContactLimit { get; set; }
        /// <summary>Creation timestamp</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Description of the SaaS plan</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Indicates if this is a SaaS V2 plan</summary>
        public bool? IsSaaSV2 { get; set; }
        /// <summary>Unique identifier for the SaaS plan</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PlanId { get; set; }
#nullable restore
#else
        public string PlanId { get; set; }
#endif
        /// <summary>Level of the plan (0-4)</summary>
        public double? PlanLevel { get; set; }
        /// <summary>Prices for the plan</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.SaasPlanResponseDto_prices>? Prices { get; set; }
#nullable restore
#else
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.SaasPlanResponseDto_prices> Prices { get; set; }
#endif
        /// <summary>Product ID for the plan</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProductId { get; set; }
#nullable restore
#else
        public string ProductId { get; set; }
#endif
        /// <summary>Provider location ID</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProviderLocationId { get; set; }
#nullable restore
#else
        public string ProviderLocationId { get; set; }
#endif
        /// <summary>Array of SaaS products included in the plan</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SaasProducts { get; set; }
#nullable restore
#else
        public List<string> SaasProducts { get; set; }
#endif
        /// <summary>Setup fee for the plan</summary>
        public double? SetupFee { get; set; }
        /// <summary>Snapshot ID for the plan</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SnapshotId { get; set; }
#nullable restore
#else
        public string SnapshotId { get; set; }
#endif
        /// <summary>Title of the SaaS plan</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>Trial period in days</summary>
        public double? TrialPeriod { get; set; }
        /// <summary>Last update timestamp</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>User limit for the plan</summary>
        public double? UserLimit { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.SaasPlanResponseDto"/> and sets the default values.
        /// </summary>
        public SaasPlanResponseDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.SaasPlanResponseDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.SaasPlanResponseDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.SaasPlanResponseDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "addOns", n => { AddOns = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "categoryId", n => { CategoryId = n.GetStringValue(); } },
                { "companyId", n => { CompanyId = n.GetStringValue(); } },
                { "contactLimit", n => { ContactLimit = n.GetDoubleValue(); } },
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "isSaaSV2", n => { IsSaaSV2 = n.GetBoolValue(); } },
                { "planId", n => { PlanId = n.GetStringValue(); } },
                { "planLevel", n => { PlanLevel = n.GetDoubleValue(); } },
                { "prices", n => { Prices = n.GetCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.SaasPlanResponseDto_prices>(global::Soenneker.HighLevel.OpenApiClient.Models.SaasPlanResponseDto_prices.CreateFromDiscriminatorValue)?.AsList(); } },
                { "productId", n => { ProductId = n.GetStringValue(); } },
                { "providerLocationId", n => { ProviderLocationId = n.GetStringValue(); } },
                { "saasProducts", n => { SaasProducts = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "setupFee", n => { SetupFee = n.GetDoubleValue(); } },
                { "snapshotId", n => { SnapshotId = n.GetStringValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "trialPeriod", n => { TrialPeriod = n.GetDoubleValue(); } },
                { "updatedAt", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "userLimit", n => { UserLimit = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("addOns", AddOns);
            writer.WriteStringValue("categoryId", CategoryId);
            writer.WriteStringValue("companyId", CompanyId);
            writer.WriteDoubleValue("contactLimit", ContactLimit);
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteStringValue("description", Description);
            writer.WriteBoolValue("isSaaSV2", IsSaaSV2);
            writer.WriteStringValue("planId", PlanId);
            writer.WriteDoubleValue("planLevel", PlanLevel);
            writer.WriteCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.SaasPlanResponseDto_prices>("prices", Prices);
            writer.WriteStringValue("productId", ProductId);
            writer.WriteStringValue("providerLocationId", ProviderLocationId);
            writer.WriteCollectionOfPrimitiveValues<string>("saasProducts", SaasProducts);
            writer.WriteDoubleValue("setupFee", SetupFee);
            writer.WriteStringValue("snapshotId", SnapshotId);
            writer.WriteStringValue("title", Title);
            writer.WriteDoubleValue("trialPeriod", TrialPeriod);
            writer.WriteDateTimeOffsetValue("updatedAt", UpdatedAt);
            writer.WriteDoubleValue("userLimit", UserLimit);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
