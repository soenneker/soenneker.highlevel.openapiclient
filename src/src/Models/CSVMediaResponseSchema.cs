// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CSVMediaResponseSchema : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Media Aspect Ratio</summary>
        public double? AspectRatio { get; set; }
        /// <summary>Audio Channel</summary>
        public double? AudioChannels { get; set; }
        /// <summary>Audio Codec</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AudioCodecName { get; set; }
#nullable restore
#else
        public string AudioCodecName { get; set; }
#endif
        /// <summary>Display Aspect Ratio</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayAspectRatio { get; set; }
#nullable restore
#else
        public string DisplayAspectRatio { get; set; }
#endif
        /// <summary>Media Aspect Ratio</summary>
        public double? Duration { get; set; }
        /// <summary>Error</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Error { get; set; }
#nullable restore
#else
        public string Error { get; set; }
#endif
        /// <summary>Facebook media error. It can be one of the following errors: imageSize, imageType, videoDuration, videoSize</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FacebookError { get; set; }
#nullable restore
#else
        public string FacebookError { get; set; }
#endif
        /// <summary>Media format</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Format { get; set; }
#nullable restore
#else
        public string Format { get; set; }
#endif
        /// <summary>Video Frame Rate</summary>
        public double? FrameRate { get; set; }
        /// <summary>List of frames</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Frames { get; set; }
#nullable restore
#else
        public List<string> Frames { get; set; }
#endif
        /// <summary>GMB media error. It can be one of the following errors: imageSize, imageDimension, imageType</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GmbError { get; set; }
#nullable restore
#else
        public string GmbError { get; set; }
#endif
        /// <summary>Media Height</summary>
        public double? Height { get; set; }
        /// <summary>Instagram media error. It can we one of the following errors: imageSize, imageType, imageAspectRatio, videoType, videoDuration, videoSize, videoAspectRatio, videoWidthHeight, audioCodec, audioCodecChannels, videoCodec, videoFrameRate</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InstagramError { get; set; }
#nullable restore
#else
        public string InstagramError { get; set; }
#endif
        /// <summary>Media error. It can be one of the following values: imageSize, imageWidth</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvalidError { get; set; }
#nullable restore
#else
        public string InvalidError { get; set; }
#endif
        /// <summary>LinkedIn media error. It can be one of the following errors: imageSize, imageType, videoType, videoDuration, videoSize</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LinkedinError { get; set; }
#nullable restore
#else
        public string LinkedinError { get; set; }
#endif
        /// <summary>Selected Poster</summary>
        public double? SelectedPoster { get; set; }
        /// <summary>Media Size</summary>
        public double? Size { get; set; }
        /// <summary>Tikok Business media error. It can be one of the following errors: videoType, videoDuration, videoSize, videoWidthHeight, videoCodec, videoFrameRate</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TiktokBusinessError { get; set; }
#nullable restore
#else
        public string TiktokBusinessError { get; set; }
#endif
        /// <summary>Tiktok media error. It can be one of the following errors: videoType, videoDuration, videoSize, videoWidthHeight, videoCodec, videoFrameRate</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TiktokError { get; set; }
#nullable restore
#else
        public string TiktokError { get; set; }
#endif
        /// <summary>Twitter media error. It can be one of the following errors: imageSize, videoType, videoDuration, videoSize</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TwitterError { get; set; }
#nullable restore
#else
        public string TwitterError { get; set; }
#endif
        /// <summary>Media Type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>Media Url</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>Video Codec</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VideoCodecName { get; set; }
#nullable restore
#else
        public string VideoCodecName { get; set; }
#endif
        /// <summary>Media Width</summary>
        public double? Width { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.CSVMediaResponseSchema"/> and sets the default values.
        /// </summary>
        public CSVMediaResponseSchema()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.CSVMediaResponseSchema"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.CSVMediaResponseSchema CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.CSVMediaResponseSchema();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "aspectRatio", n => { AspectRatio = n.GetDoubleValue(); } },
                { "audioChannels", n => { AudioChannels = n.GetDoubleValue(); } },
                { "audioCodecName", n => { AudioCodecName = n.GetStringValue(); } },
                { "displayAspectRatio", n => { DisplayAspectRatio = n.GetStringValue(); } },
                { "duration", n => { Duration = n.GetDoubleValue(); } },
                { "error", n => { Error = n.GetStringValue(); } },
                { "facebookError", n => { FacebookError = n.GetStringValue(); } },
                { "format", n => { Format = n.GetStringValue(); } },
                { "frameRate", n => { FrameRate = n.GetDoubleValue(); } },
                { "frames", n => { Frames = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "gmbError", n => { GmbError = n.GetStringValue(); } },
                { "height", n => { Height = n.GetDoubleValue(); } },
                { "instagramError", n => { InstagramError = n.GetStringValue(); } },
                { "invalidError", n => { InvalidError = n.GetStringValue(); } },
                { "linkedinError", n => { LinkedinError = n.GetStringValue(); } },
                { "selectedPoster", n => { SelectedPoster = n.GetDoubleValue(); } },
                { "size", n => { Size = n.GetDoubleValue(); } },
                { "tiktokBusinessError", n => { TiktokBusinessError = n.GetStringValue(); } },
                { "tiktokError", n => { TiktokError = n.GetStringValue(); } },
                { "twitterError", n => { TwitterError = n.GetStringValue(); } },
                { "type", n => { Type = n.GetStringValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
                { "videoCodecName", n => { VideoCodecName = n.GetStringValue(); } },
                { "width", n => { Width = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("aspectRatio", AspectRatio);
            writer.WriteDoubleValue("audioChannels", AudioChannels);
            writer.WriteStringValue("audioCodecName", AudioCodecName);
            writer.WriteStringValue("displayAspectRatio", DisplayAspectRatio);
            writer.WriteDoubleValue("duration", Duration);
            writer.WriteStringValue("error", Error);
            writer.WriteStringValue("facebookError", FacebookError);
            writer.WriteStringValue("format", Format);
            writer.WriteDoubleValue("frameRate", FrameRate);
            writer.WriteCollectionOfPrimitiveValues<string>("frames", Frames);
            writer.WriteStringValue("gmbError", GmbError);
            writer.WriteDoubleValue("height", Height);
            writer.WriteStringValue("instagramError", InstagramError);
            writer.WriteStringValue("invalidError", InvalidError);
            writer.WriteStringValue("linkedinError", LinkedinError);
            writer.WriteDoubleValue("selectedPoster", SelectedPoster);
            writer.WriteDoubleValue("size", Size);
            writer.WriteStringValue("tiktokBusinessError", TiktokBusinessError);
            writer.WriteStringValue("tiktokError", TiktokError);
            writer.WriteStringValue("twitterError", TwitterError);
            writer.WriteStringValue("type", Type);
            writer.WriteStringValue("url", Url);
            writer.WriteStringValue("videoCodecName", VideoCodecName);
            writer.WriteDoubleValue("width", Width);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
