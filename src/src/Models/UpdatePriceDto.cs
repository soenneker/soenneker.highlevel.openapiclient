// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class UpdatePriceDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Continue selling when out of stock</summary>
        public bool? AllowOutOfStockPurchases { get; set; }
        /// <summary>The amount of the price. ( min: 0 )</summary>
        public double? Amount { get; set; }
        /// <summary>Available inventory stock quantity</summary>
        public double? AvailableQuantity { get; set; }
        /// <summary>The compare at price for the price.</summary>
        public double? CompareAtPrice { get; set; }
        /// <summary>The currency of the price.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>A brief description of the price.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Digital delivery options</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DigitalDelivery { get; set; }
#nullable restore
#else
        public List<string> DigitalDelivery { get; set; }
#endif
        /// <summary>Is the product a digital product</summary>
        public bool? IsDigitalProduct { get; set; }
        /// <summary>The unique identifier of the location associated with the price.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LocationId { get; set; }
#nullable restore
#else
        public string LocationId { get; set; }
#endif
        /// <summary>An array of membership offers associated with the price.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.MembershipOfferDto>? MembershipOffers { get; set; }
#nullable restore
#else
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.MembershipOfferDto> MembershipOffers { get; set; }
#endif
        /// <summary>Additional metadata associated with the price.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_meta? Meta { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_meta Meta { get; set; }
#endif
        /// <summary>The name of the price.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The recurring details of the price (if type is recurring).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_recurring? Recurring { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_recurring Recurring { get; set; }
#endif
        /// <summary>The setup fee for the price.</summary>
        public double? SetupFee { get; set; }
        /// <summary>Shipping options of the Price</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_shippingOptions? ShippingOptions { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_shippingOptions ShippingOptions { get; set; }
#endif
        /// <summary>The unique identifier of the SKU associated with the price</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Sku { get; set; }
#nullable restore
#else
        public string Sku { get; set; }
#endif
        /// <summary>The total number of billing cycles for the price. ( min: 1 )</summary>
        public double? TotalCycles { get; set; }
        /// <summary>Need to track inventory stock quantity</summary>
        public bool? TrackInventory { get; set; }
        /// <summary>The trial period duration in days (if applicable).</summary>
        public double? TrialPeriod { get; set; }
        /// <summary>The type of the price.</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_type? Type { get; set; }
        /// <summary>The unique identifier of the user who created the price.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserId { get; set; }
#nullable restore
#else
        public string UserId { get; set; }
#endif
        /// <summary>An array of variant option IDs associated with the price.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? VariantOptionIds { get; set; }
#nullable restore
#else
        public List<string> VariantOptionIds { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto"/> and sets the default values.
        /// </summary>
        public UpdatePriceDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "allowOutOfStockPurchases", n => { AllowOutOfStockPurchases = n.GetBoolValue(); } },
                { "amount", n => { Amount = n.GetDoubleValue(); } },
                { "availableQuantity", n => { AvailableQuantity = n.GetDoubleValue(); } },
                { "compareAtPrice", n => { CompareAtPrice = n.GetDoubleValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "digitalDelivery", n => { DigitalDelivery = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "isDigitalProduct", n => { IsDigitalProduct = n.GetBoolValue(); } },
                { "locationId", n => { LocationId = n.GetStringValue(); } },
                { "membershipOffers", n => { MembershipOffers = n.GetCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.MembershipOfferDto>(global::Soenneker.HighLevel.OpenApiClient.Models.MembershipOfferDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "meta", n => { Meta = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_meta>(global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_meta.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "recurring", n => { Recurring = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_recurring>(global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_recurring.CreateFromDiscriminatorValue); } },
                { "setupFee", n => { SetupFee = n.GetDoubleValue(); } },
                { "shippingOptions", n => { ShippingOptions = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_shippingOptions>(global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_shippingOptions.CreateFromDiscriminatorValue); } },
                { "sku", n => { Sku = n.GetStringValue(); } },
                { "totalCycles", n => { TotalCycles = n.GetDoubleValue(); } },
                { "trackInventory", n => { TrackInventory = n.GetBoolValue(); } },
                { "trialPeriod", n => { TrialPeriod = n.GetDoubleValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_type>(); } },
                { "userId", n => { UserId = n.GetStringValue(); } },
                { "variantOptionIds", n => { VariantOptionIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("allowOutOfStockPurchases", AllowOutOfStockPurchases);
            writer.WriteDoubleValue("amount", Amount);
            writer.WriteDoubleValue("availableQuantity", AvailableQuantity);
            writer.WriteDoubleValue("compareAtPrice", CompareAtPrice);
            writer.WriteStringValue("currency", Currency);
            writer.WriteStringValue("description", Description);
            writer.WriteCollectionOfPrimitiveValues<string>("digitalDelivery", DigitalDelivery);
            writer.WriteBoolValue("isDigitalProduct", IsDigitalProduct);
            writer.WriteStringValue("locationId", LocationId);
            writer.WriteCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.MembershipOfferDto>("membershipOffers", MembershipOffers);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_meta>("meta", Meta);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_recurring>("recurring", Recurring);
            writer.WriteDoubleValue("setupFee", SetupFee);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_shippingOptions>("shippingOptions", ShippingOptions);
            writer.WriteStringValue("sku", Sku);
            writer.WriteDoubleValue("totalCycles", TotalCycles);
            writer.WriteBoolValue("trackInventory", TrackInventory);
            writer.WriteDoubleValue("trialPeriod", TrialPeriod);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.UpdatePriceDto_type>("type", Type);
            writer.WriteStringValue("userId", UserId);
            writer.WriteCollectionOfPrimitiveValues<string>("variantOptionIds", VariantOptionIds);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
