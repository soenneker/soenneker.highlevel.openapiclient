// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class NumberPoolDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Whether call recording is enabled</summary>
        public bool? CallRecording { get; set; }
        /// <summary>Number to forward calls to</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ForwardingNumber { get; set; }
#nullable restore
#else
        public string ForwardingNumber { get; set; }
#endif
        /// <summary>Unique identifier for the number pool</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Inbound call service configuration</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.NumberPoolDto_inboundCallService? InboundCallService { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.NumberPoolDto_inboundCallService InboundCallService { get; set; }
#endif
        /// <summary>Whether the number pool is active</summary>
        public bool? IsActive { get; set; }
        /// <summary>Location ID this pool belongs to</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LocationId { get; set; }
#nullable restore
#else
        public string LocationId { get; set; }
#endif
        /// <summary>Human-readable name of the number pool</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Phone numbers in this pool</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.NumberPoolDto_numbers>? Numbers { get; set; }
#nullable restore
#else
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.NumberPoolDto_numbers> Numbers { get; set; }
#endif
        /// <summary>Whether whisper is enabled</summary>
        public bool? Whisper { get; set; }
        /// <summary>Message played during whisper</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WhisperMessage { get; set; }
#nullable restore
#else
        public string WhisperMessage { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.NumberPoolDto"/> and sets the default values.
        /// </summary>
        public NumberPoolDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.NumberPoolDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.NumberPoolDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.NumberPoolDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "callRecording", n => { CallRecording = n.GetBoolValue(); } },
                { "forwardingNumber", n => { ForwardingNumber = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "inboundCallService", n => { InboundCallService = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.NumberPoolDto_inboundCallService>(global::Soenneker.HighLevel.OpenApiClient.Models.NumberPoolDto_inboundCallService.CreateFromDiscriminatorValue); } },
                { "isActive", n => { IsActive = n.GetBoolValue(); } },
                { "locationId", n => { LocationId = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "numbers", n => { Numbers = n.GetCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.NumberPoolDto_numbers>(global::Soenneker.HighLevel.OpenApiClient.Models.NumberPoolDto_numbers.CreateFromDiscriminatorValue)?.AsList(); } },
                { "whisper", n => { Whisper = n.GetBoolValue(); } },
                { "whisperMessage", n => { WhisperMessage = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("callRecording", CallRecording);
            writer.WriteStringValue("forwardingNumber", ForwardingNumber);
            writer.WriteStringValue("id", Id);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.NumberPoolDto_inboundCallService>("inboundCallService", InboundCallService);
            writer.WriteBoolValue("isActive", IsActive);
            writer.WriteStringValue("locationId", LocationId);
            writer.WriteStringValue("name", Name);
            writer.WriteCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.NumberPoolDto_numbers>("numbers", Numbers);
            writer.WriteBoolValue("whisper", Whisper);
            writer.WriteStringValue("whisperMessage", WhisperMessage);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
