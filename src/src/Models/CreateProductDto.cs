// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CreateProductDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Tax category ID for Automatic taxes calculation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AutomaticTaxCategoryId { get; set; }
#nullable restore
#else
        public string AutomaticTaxCategoryId { get; set; }
#endif
        /// <summary>Indicates whether the product is available in-store.</summary>
        public bool? AvailableInStore { get; set; }
        /// <summary>An array of category Ids for the product</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? CollectionIds { get; set; }
#nullable restore
#else
        public List<string> CollectionIds { get; set; }
#endif
        /// <summary>A brief description of the product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The URL for the product image.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Image { get; set; }
#nullable restore
#else
        public string Image { get; set; }
#endif
        /// <summary>Is the product label enabled. If this is true, label object cannot be empty.</summary>
        public bool? IsLabelEnabled { get; set; }
        /// <summary>Are there any taxes attached to the product. If this is true, taxes array cannot be empty.</summary>
        public bool? IsTaxesEnabled { get; set; }
        /// <summary>Details for Product Label</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.CreateProductDto_label? Label { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.CreateProductDto_label Label { get; set; }
#endif
        /// <summary>The unique identifier for the location.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LocationId { get; set; }
#nullable restore
#else
        public string LocationId { get; set; }
#endif
        /// <summary>An array of medias for the product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.ProductMediaDto>? Medias { get; set; }
#nullable restore
#else
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.ProductMediaDto> Medias { get; set; }
#endif
        /// <summary>The name of the product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The productType property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.CreateProductDto_productType? ProductType { get; set; }
        /// <summary>SEO data for the product that will be displayed in the preview</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.CreateProductDto_seo? Seo { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.CreateProductDto_seo Seo { get; set; }
#endif
        /// <summary>The slug using which the product navigation will be handled</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Slug { get; set; }
#nullable restore
#else
        public string Slug { get; set; }
#endif
        /// <summary>The statement descriptor for the product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StatementDescriptor { get; set; }
#nullable restore
#else
        public string StatementDescriptor { get; set; }
#endif
        /// <summary>List of ids of Taxes attached to the Product. If taxes are passed, isTaxesEnabled should be true.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Taxes { get; set; }
#nullable restore
#else
        public List<string> Taxes { get; set; }
#endif
        /// <summary>Whether the taxes should be included in the purchase price</summary>
        public bool? TaxInclusive { get; set; }
        /// <summary>An array of variants for the product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.ProductVariantDto>? Variants { get; set; }
#nullable restore
#else
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.ProductVariantDto> Variants { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.CreateProductDto"/> and sets the default values.
        /// </summary>
        public CreateProductDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.CreateProductDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.CreateProductDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.CreateProductDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "automaticTaxCategoryId", n => { AutomaticTaxCategoryId = n.GetStringValue(); } },
                { "availableInStore", n => { AvailableInStore = n.GetBoolValue(); } },
                { "collectionIds", n => { CollectionIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "image", n => { Image = n.GetStringValue(); } },
                { "isLabelEnabled", n => { IsLabelEnabled = n.GetBoolValue(); } },
                { "isTaxesEnabled", n => { IsTaxesEnabled = n.GetBoolValue(); } },
                { "label", n => { Label = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.CreateProductDto_label>(global::Soenneker.HighLevel.OpenApiClient.Models.CreateProductDto_label.CreateFromDiscriminatorValue); } },
                { "locationId", n => { LocationId = n.GetStringValue(); } },
                { "medias", n => { Medias = n.GetCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.ProductMediaDto>(global::Soenneker.HighLevel.OpenApiClient.Models.ProductMediaDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "productType", n => { ProductType = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.CreateProductDto_productType>(); } },
                { "seo", n => { Seo = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.CreateProductDto_seo>(global::Soenneker.HighLevel.OpenApiClient.Models.CreateProductDto_seo.CreateFromDiscriminatorValue); } },
                { "slug", n => { Slug = n.GetStringValue(); } },
                { "statementDescriptor", n => { StatementDescriptor = n.GetStringValue(); } },
                { "taxInclusive", n => { TaxInclusive = n.GetBoolValue(); } },
                { "taxes", n => { Taxes = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "variants", n => { Variants = n.GetCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.ProductVariantDto>(global::Soenneker.HighLevel.OpenApiClient.Models.ProductVariantDto.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("automaticTaxCategoryId", AutomaticTaxCategoryId);
            writer.WriteBoolValue("availableInStore", AvailableInStore);
            writer.WriteCollectionOfPrimitiveValues<string>("collectionIds", CollectionIds);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("image", Image);
            writer.WriteBoolValue("isLabelEnabled", IsLabelEnabled);
            writer.WriteBoolValue("isTaxesEnabled", IsTaxesEnabled);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.CreateProductDto_label>("label", Label);
            writer.WriteStringValue("locationId", LocationId);
            writer.WriteCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.ProductMediaDto>("medias", Medias);
            writer.WriteStringValue("name", Name);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.CreateProductDto_productType>("productType", ProductType);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.CreateProductDto_seo>("seo", Seo);
            writer.WriteStringValue("slug", Slug);
            writer.WriteStringValue("statementDescriptor", StatementDescriptor);
            writer.WriteCollectionOfPrimitiveValues<string>("taxes", Taxes);
            writer.WriteBoolValue("taxInclusive", TaxInclusive);
            writer.WriteCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.ProductVariantDto>("variants", Variants);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
