// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Text2PayDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>create invoice in draft mode or send mode</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_action? Action { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>location Id / company Id based on altType</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AltId { get; set; }
#nullable restore
#else
        public string AltId { get; set; }
#endif
        /// <summary>Alt Type</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_altType? AltType { get; set; }
        /// <summary>attachments for the invoice</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.AttachmentsDto>? Attachments { get; set; }
#nullable restore
#else
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.AttachmentsDto> Attachments { get; set; }
#endif
        /// <summary>Automatic taxes enabled for the Invoice</summary>
        public bool? AutomaticTaxesEnabled { get; set; }
        /// <summary>The businessDetails property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.BusinessDetailsDto? BusinessDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.BusinessDetailsDto BusinessDetails { get; set; }
#endif
        /// <summary>Contact information to send the invoice to</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_contactDetails? ContactDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_contactDetails ContactDetails { get; set; }
#endif
        /// <summary>Currency code</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>The discount property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.DiscountDto? Discount { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.DiscountDto Discount { get; set; }
#endif
        /// <summary>Due date in YYYY-MM-DD format</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DueDate { get; set; }
#nullable restore
#else
        public string DueDate { get; set; }
#endif
        /// <summary>id of invoice to update. If skipped, a new invoice will be created</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>include terms &amp; notes with receipts</summary>
        public bool? IncludeTermsNote { get; set; }
        /// <summary>Invoice Number</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceNumber { get; set; }
#nullable restore
#else
        public string InvoiceNumber { get; set; }
#endif
        /// <summary>prefix for invoice number</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceNumberPrefix { get; set; }
#nullable restore
#else
        public string InvoiceNumberPrefix { get; set; }
#endif
        /// <summary>Issue date in YYYY-MM-DD format</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IssueDate { get; set; }
#nullable restore
#else
        public string IssueDate { get; set; }
#endif
        /// <summary>An array of items for the invoice.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.InvoiceItemDto>? Items { get; set; }
#nullable restore
#else
        public List<global::Soenneker.HighLevel.OpenApiClient.Models.InvoiceItemDto> Items { get; set; }
#endif
        /// <summary>late fees configuration</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_lateFeesConfiguration? LateFeesConfiguration { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_lateFeesConfiguration LateFeesConfiguration { get; set; }
#endif
        /// <summary>The liveMode property</summary>
        public bool? LiveMode { get; set; }
        /// <summary>miscellaneous charges for the invoice</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_miscellaneousCharges? MiscellaneousCharges { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_miscellaneousCharges MiscellaneousCharges { get; set; }
#endif
        /// <summary>Invoice Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Payment Methods for Invoices</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_paymentMethods? PaymentMethods { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_paymentMethods PaymentMethods { get; set; }
#endif
        /// <summary>split invoice into payment schedule summing up to full invoice amount</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_paymentSchedule? PaymentSchedule { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_paymentSchedule PaymentSchedule { get; set; }
#endif
        /// <summary>The sentTo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.SentToDto? SentTo { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.SentToDto SentTo { get; set; }
#endif
        /// <summary>Terms notes, Also supports HTML markups</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TermsNotes { get; set; }
#nullable restore
#else
        public string TermsNotes { get; set; }
#endif
        /// <summary>tips configuration for the invoice</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_tipsConfiguration? TipsConfiguration { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_tipsConfiguration TipsConfiguration { get; set; }
#endif
        /// <summary>Title for the invoice</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>id of user generating invoice</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserId { get; set; }
#nullable restore
#else
        public string UserId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto"/> and sets the default values.
        /// </summary>
        public Text2PayDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "action", n => { Action = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_action>(); } },
                { "altId", n => { AltId = n.GetStringValue(); } },
                { "altType", n => { AltType = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_altType>(); } },
                { "attachments", n => { Attachments = n.GetCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.AttachmentsDto>(global::Soenneker.HighLevel.OpenApiClient.Models.AttachmentsDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "automaticTaxesEnabled", n => { AutomaticTaxesEnabled = n.GetBoolValue(); } },
                { "businessDetails", n => { BusinessDetails = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.BusinessDetailsDto>(global::Soenneker.HighLevel.OpenApiClient.Models.BusinessDetailsDto.CreateFromDiscriminatorValue); } },
                { "contactDetails", n => { ContactDetails = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_contactDetails>(global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_contactDetails.CreateFromDiscriminatorValue); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "discount", n => { Discount = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.DiscountDto>(global::Soenneker.HighLevel.OpenApiClient.Models.DiscountDto.CreateFromDiscriminatorValue); } },
                { "dueDate", n => { DueDate = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "includeTermsNote", n => { IncludeTermsNote = n.GetBoolValue(); } },
                { "invoiceNumber", n => { InvoiceNumber = n.GetStringValue(); } },
                { "invoiceNumberPrefix", n => { InvoiceNumberPrefix = n.GetStringValue(); } },
                { "issueDate", n => { IssueDate = n.GetStringValue(); } },
                { "items", n => { Items = n.GetCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.InvoiceItemDto>(global::Soenneker.HighLevel.OpenApiClient.Models.InvoiceItemDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "lateFeesConfiguration", n => { LateFeesConfiguration = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_lateFeesConfiguration>(global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_lateFeesConfiguration.CreateFromDiscriminatorValue); } },
                { "liveMode", n => { LiveMode = n.GetBoolValue(); } },
                { "miscellaneousCharges", n => { MiscellaneousCharges = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_miscellaneousCharges>(global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_miscellaneousCharges.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "paymentMethods", n => { PaymentMethods = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_paymentMethods>(global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_paymentMethods.CreateFromDiscriminatorValue); } },
                { "paymentSchedule", n => { PaymentSchedule = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_paymentSchedule>(global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_paymentSchedule.CreateFromDiscriminatorValue); } },
                { "sentTo", n => { SentTo = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.SentToDto>(global::Soenneker.HighLevel.OpenApiClient.Models.SentToDto.CreateFromDiscriminatorValue); } },
                { "termsNotes", n => { TermsNotes = n.GetStringValue(); } },
                { "tipsConfiguration", n => { TipsConfiguration = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_tipsConfiguration>(global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_tipsConfiguration.CreateFromDiscriminatorValue); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "userId", n => { UserId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_action>("action", Action);
            writer.WriteStringValue("altId", AltId);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_altType>("altType", AltType);
            writer.WriteCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.AttachmentsDto>("attachments", Attachments);
            writer.WriteBoolValue("automaticTaxesEnabled", AutomaticTaxesEnabled);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.BusinessDetailsDto>("businessDetails", BusinessDetails);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_contactDetails>("contactDetails", ContactDetails);
            writer.WriteStringValue("currency", Currency);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.DiscountDto>("discount", Discount);
            writer.WriteStringValue("dueDate", DueDate);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("includeTermsNote", IncludeTermsNote);
            writer.WriteStringValue("invoiceNumber", InvoiceNumber);
            writer.WriteStringValue("invoiceNumberPrefix", InvoiceNumberPrefix);
            writer.WriteStringValue("issueDate", IssueDate);
            writer.WriteCollectionOfObjectValues<global::Soenneker.HighLevel.OpenApiClient.Models.InvoiceItemDto>("items", Items);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_lateFeesConfiguration>("lateFeesConfiguration", LateFeesConfiguration);
            writer.WriteBoolValue("liveMode", LiveMode);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_miscellaneousCharges>("miscellaneousCharges", MiscellaneousCharges);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_paymentMethods>("paymentMethods", PaymentMethods);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_paymentSchedule>("paymentSchedule", PaymentSchedule);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.SentToDto>("sentTo", SentTo);
            writer.WriteStringValue("termsNotes", TermsNotes);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.Text2PayDto_tipsConfiguration>("tipsConfiguration", TipsConfiguration);
            writer.WriteStringValue("title", Title);
            writer.WriteStringValue("userId", UserId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
