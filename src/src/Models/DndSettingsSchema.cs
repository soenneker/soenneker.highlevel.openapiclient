// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class DndSettingsSchema : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The Call property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema? Call { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema Call { get; set; }
#endif
        /// <summary>The Email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema? Email { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema Email { get; set; }
#endif
        /// <summary>The FB property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema? FB { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema FB { get; set; }
#endif
        /// <summary>The GMB property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema? GMB { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema GMB { get; set; }
#endif
        /// <summary>The SMS property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema? SMS { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema SMS { get; set; }
#endif
        /// <summary>The WhatsApp property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema? WhatsApp { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema WhatsApp { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingsSchema"/> and sets the default values.
        /// </summary>
        public DndSettingsSchema()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingsSchema"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingsSchema CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingsSchema();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "Call", n => { Call = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema>(global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema.CreateFromDiscriminatorValue); } },
                { "Email", n => { Email = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema>(global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema.CreateFromDiscriminatorValue); } },
                { "FB", n => { FB = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema>(global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema.CreateFromDiscriminatorValue); } },
                { "GMB", n => { GMB = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema>(global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema.CreateFromDiscriminatorValue); } },
                { "SMS", n => { SMS = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema>(global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema.CreateFromDiscriminatorValue); } },
                { "WhatsApp", n => { WhatsApp = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema>(global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema>("Call", Call);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema>("Email", Email);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema>("FB", FB);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema>("GMB", GMB);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema>("SMS", SMS);
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.DndSettingSchema>("WhatsApp", WhatsApp);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
