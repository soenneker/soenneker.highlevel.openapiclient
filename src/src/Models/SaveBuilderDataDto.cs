// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SaveBuilderDataDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The dnd property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.HighLevel.OpenApiClient.Models.SaveBuilderDataDto_dnd? Dnd { get; set; }
#nullable restore
#else
        public global::Soenneker.HighLevel.OpenApiClient.Models.SaveBuilderDataDto_dnd Dnd { get; set; }
#endif
        /// <summary>The editorType property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Models.SaveBuilderDataDto_editorType? EditorType { get; set; }
        /// <summary>The html property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Html { get; set; }
#nullable restore
#else
        public string Html { get; set; }
#endif
        /// <summary>The isPlainText property</summary>
        public bool? IsPlainText { get; set; }
        /// <summary>The locationId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LocationId { get; set; }
#nullable restore
#else
        public string LocationId { get; set; }
#endif
        /// <summary>The previewText property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PreviewText { get; set; }
#nullable restore
#else
        public string PreviewText { get; set; }
#endif
        /// <summary>The templateId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TemplateId { get; set; }
#nullable restore
#else
        public string TemplateId { get; set; }
#endif
        /// <summary>The updatedBy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedBy { get; set; }
#nullable restore
#else
        public string UpdatedBy { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.SaveBuilderDataDto"/> and sets the default values.
        /// </summary>
        public SaveBuilderDataDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.SaveBuilderDataDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.SaveBuilderDataDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.SaveBuilderDataDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "dnd", n => { Dnd = n.GetObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.SaveBuilderDataDto_dnd>(global::Soenneker.HighLevel.OpenApiClient.Models.SaveBuilderDataDto_dnd.CreateFromDiscriminatorValue); } },
                { "editorType", n => { EditorType = n.GetEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.SaveBuilderDataDto_editorType>(); } },
                { "html", n => { Html = n.GetStringValue(); } },
                { "isPlainText", n => { IsPlainText = n.GetBoolValue(); } },
                { "locationId", n => { LocationId = n.GetStringValue(); } },
                { "previewText", n => { PreviewText = n.GetStringValue(); } },
                { "templateId", n => { TemplateId = n.GetStringValue(); } },
                { "updatedBy", n => { UpdatedBy = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.HighLevel.OpenApiClient.Models.SaveBuilderDataDto_dnd>("dnd", Dnd);
            writer.WriteEnumValue<global::Soenneker.HighLevel.OpenApiClient.Models.SaveBuilderDataDto_editorType>("editorType", EditorType);
            writer.WriteStringValue("html", Html);
            writer.WriteBoolValue("isPlainText", IsPlainText);
            writer.WriteStringValue("locationId", LocationId);
            writer.WriteStringValue("previewText", PreviewText);
            writer.WriteStringValue("templateId", TemplateId);
            writer.WriteStringValue("updatedBy", UpdatedBy);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
