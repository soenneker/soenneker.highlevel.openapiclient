// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PermissionsDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The adwordsReportingEnabled property</summary>
        public bool? AdwordsReportingEnabled { get; set; }
        /// <summary>The affiliateManagerEnabled property</summary>
        public bool? AffiliateManagerEnabled { get; set; }
        /// <summary>The agentReportingEnabled property</summary>
        public bool? AgentReportingEnabled { get; set; }
        /// <summary>The appointmentsEnabled property</summary>
        public bool? AppointmentsEnabled { get; set; }
        /// <summary>The assignedDataOnly property</summary>
        public bool? AssignedDataOnly { get; set; }
        /// <summary>The attributionsReportingEnabled property</summary>
        public bool? AttributionsReportingEnabled { get; set; }
        /// <summary>The bloggingEnabled property</summary>
        public bool? BloggingEnabled { get; set; }
        /// <summary>The botService property</summary>
        public bool? BotService { get; set; }
        /// <summary>The bulkRequestsEnabled property</summary>
        public bool? BulkRequestsEnabled { get; set; }
        /// <summary>The campaignsEnabled property</summary>
        public bool? CampaignsEnabled { get; set; }
        /// <summary>The campaignsReadOnly property</summary>
        public bool? CampaignsReadOnly { get; set; }
        /// <summary>The cancelSubscriptionEnabled property</summary>
        public bool? CancelSubscriptionEnabled { get; set; }
        /// <summary>The communitiesEnabled property</summary>
        public bool? CommunitiesEnabled { get; set; }
        /// <summary>The contactsEnabled property</summary>
        public bool? ContactsEnabled { get; set; }
        /// <summary>The contentAiEnabled property</summary>
        public bool? ContentAiEnabled { get; set; }
        /// <summary>The conversationsEnabled property</summary>
        public bool? ConversationsEnabled { get; set; }
        /// <summary>The dashboardStatsEnabled property</summary>
        public bool? DashboardStatsEnabled { get; set; }
        /// <summary>The exportPaymentsEnabled property</summary>
        public bool? ExportPaymentsEnabled { get; set; }
        /// <summary>The facebookAdsReportingEnabled property</summary>
        public bool? FacebookAdsReportingEnabled { get; set; }
        /// <summary>The funnelsEnabled property</summary>
        public bool? FunnelsEnabled { get; set; }
        /// <summary>The invoiceEnabled property</summary>
        public bool? InvoiceEnabled { get; set; }
        /// <summary>The leadValueEnabled property</summary>
        public bool? LeadValueEnabled { get; set; }
        /// <summary>The marketingEnabled property</summary>
        public bool? MarketingEnabled { get; set; }
        /// <summary>The membershipEnabled property</summary>
        public bool? MembershipEnabled { get; set; }
        /// <summary>The onlineListingsEnabled property</summary>
        public bool? OnlineListingsEnabled { get; set; }
        /// <summary>The opportunitiesEnabled property</summary>
        public bool? OpportunitiesEnabled { get; set; }
        /// <summary>The paymentsEnabled property</summary>
        public bool? PaymentsEnabled { get; set; }
        /// <summary>The phoneCallEnabled property</summary>
        public bool? PhoneCallEnabled { get; set; }
        /// <summary>The recordPaymentEnabled property</summary>
        public bool? RecordPaymentEnabled { get; set; }
        /// <summary>The refundsEnabled property</summary>
        public bool? RefundsEnabled { get; set; }
        /// <summary>The reviewsEnabled property</summary>
        public bool? ReviewsEnabled { get; set; }
        /// <summary>The settingsEnabled property</summary>
        public bool? SettingsEnabled { get; set; }
        /// <summary>The socialPlanner property</summary>
        public bool? SocialPlanner { get; set; }
        /// <summary>The tagsEnabled property</summary>
        public bool? TagsEnabled { get; set; }
        /// <summary>The triggersEnabled property</summary>
        public bool? TriggersEnabled { get; set; }
        /// <summary>The websitesEnabled property</summary>
        public bool? WebsitesEnabled { get; set; }
        /// <summary>The workflowsEnabled property</summary>
        public bool? WorkflowsEnabled { get; set; }
        /// <summary>The workflowsReadOnly property</summary>
        public bool? WorkflowsReadOnly { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.PermissionsDto"/> and sets the default values.
        /// </summary>
        public PermissionsDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Models.PermissionsDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.HighLevel.OpenApiClient.Models.PermissionsDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.HighLevel.OpenApiClient.Models.PermissionsDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "adwordsReportingEnabled", n => { AdwordsReportingEnabled = n.GetBoolValue(); } },
                { "affiliateManagerEnabled", n => { AffiliateManagerEnabled = n.GetBoolValue(); } },
                { "agentReportingEnabled", n => { AgentReportingEnabled = n.GetBoolValue(); } },
                { "appointmentsEnabled", n => { AppointmentsEnabled = n.GetBoolValue(); } },
                { "assignedDataOnly", n => { AssignedDataOnly = n.GetBoolValue(); } },
                { "attributionsReportingEnabled", n => { AttributionsReportingEnabled = n.GetBoolValue(); } },
                { "bloggingEnabled", n => { BloggingEnabled = n.GetBoolValue(); } },
                { "botService", n => { BotService = n.GetBoolValue(); } },
                { "bulkRequestsEnabled", n => { BulkRequestsEnabled = n.GetBoolValue(); } },
                { "campaignsEnabled", n => { CampaignsEnabled = n.GetBoolValue(); } },
                { "campaignsReadOnly", n => { CampaignsReadOnly = n.GetBoolValue(); } },
                { "cancelSubscriptionEnabled", n => { CancelSubscriptionEnabled = n.GetBoolValue(); } },
                { "communitiesEnabled", n => { CommunitiesEnabled = n.GetBoolValue(); } },
                { "contactsEnabled", n => { ContactsEnabled = n.GetBoolValue(); } },
                { "contentAiEnabled", n => { ContentAiEnabled = n.GetBoolValue(); } },
                { "conversationsEnabled", n => { ConversationsEnabled = n.GetBoolValue(); } },
                { "dashboardStatsEnabled", n => { DashboardStatsEnabled = n.GetBoolValue(); } },
                { "exportPaymentsEnabled", n => { ExportPaymentsEnabled = n.GetBoolValue(); } },
                { "facebookAdsReportingEnabled", n => { FacebookAdsReportingEnabled = n.GetBoolValue(); } },
                { "funnelsEnabled", n => { FunnelsEnabled = n.GetBoolValue(); } },
                { "invoiceEnabled", n => { InvoiceEnabled = n.GetBoolValue(); } },
                { "leadValueEnabled", n => { LeadValueEnabled = n.GetBoolValue(); } },
                { "marketingEnabled", n => { MarketingEnabled = n.GetBoolValue(); } },
                { "membershipEnabled", n => { MembershipEnabled = n.GetBoolValue(); } },
                { "onlineListingsEnabled", n => { OnlineListingsEnabled = n.GetBoolValue(); } },
                { "opportunitiesEnabled", n => { OpportunitiesEnabled = n.GetBoolValue(); } },
                { "paymentsEnabled", n => { PaymentsEnabled = n.GetBoolValue(); } },
                { "phoneCallEnabled", n => { PhoneCallEnabled = n.GetBoolValue(); } },
                { "recordPaymentEnabled", n => { RecordPaymentEnabled = n.GetBoolValue(); } },
                { "refundsEnabled", n => { RefundsEnabled = n.GetBoolValue(); } },
                { "reviewsEnabled", n => { ReviewsEnabled = n.GetBoolValue(); } },
                { "settingsEnabled", n => { SettingsEnabled = n.GetBoolValue(); } },
                { "socialPlanner", n => { SocialPlanner = n.GetBoolValue(); } },
                { "tagsEnabled", n => { TagsEnabled = n.GetBoolValue(); } },
                { "triggersEnabled", n => { TriggersEnabled = n.GetBoolValue(); } },
                { "websitesEnabled", n => { WebsitesEnabled = n.GetBoolValue(); } },
                { "workflowsEnabled", n => { WorkflowsEnabled = n.GetBoolValue(); } },
                { "workflowsReadOnly", n => { WorkflowsReadOnly = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("adwordsReportingEnabled", AdwordsReportingEnabled);
            writer.WriteBoolValue("affiliateManagerEnabled", AffiliateManagerEnabled);
            writer.WriteBoolValue("agentReportingEnabled", AgentReportingEnabled);
            writer.WriteBoolValue("appointmentsEnabled", AppointmentsEnabled);
            writer.WriteBoolValue("assignedDataOnly", AssignedDataOnly);
            writer.WriteBoolValue("attributionsReportingEnabled", AttributionsReportingEnabled);
            writer.WriteBoolValue("bloggingEnabled", BloggingEnabled);
            writer.WriteBoolValue("botService", BotService);
            writer.WriteBoolValue("bulkRequestsEnabled", BulkRequestsEnabled);
            writer.WriteBoolValue("campaignsEnabled", CampaignsEnabled);
            writer.WriteBoolValue("campaignsReadOnly", CampaignsReadOnly);
            writer.WriteBoolValue("cancelSubscriptionEnabled", CancelSubscriptionEnabled);
            writer.WriteBoolValue("communitiesEnabled", CommunitiesEnabled);
            writer.WriteBoolValue("contactsEnabled", ContactsEnabled);
            writer.WriteBoolValue("contentAiEnabled", ContentAiEnabled);
            writer.WriteBoolValue("conversationsEnabled", ConversationsEnabled);
            writer.WriteBoolValue("dashboardStatsEnabled", DashboardStatsEnabled);
            writer.WriteBoolValue("exportPaymentsEnabled", ExportPaymentsEnabled);
            writer.WriteBoolValue("facebookAdsReportingEnabled", FacebookAdsReportingEnabled);
            writer.WriteBoolValue("funnelsEnabled", FunnelsEnabled);
            writer.WriteBoolValue("invoiceEnabled", InvoiceEnabled);
            writer.WriteBoolValue("leadValueEnabled", LeadValueEnabled);
            writer.WriteBoolValue("marketingEnabled", MarketingEnabled);
            writer.WriteBoolValue("membershipEnabled", MembershipEnabled);
            writer.WriteBoolValue("onlineListingsEnabled", OnlineListingsEnabled);
            writer.WriteBoolValue("opportunitiesEnabled", OpportunitiesEnabled);
            writer.WriteBoolValue("paymentsEnabled", PaymentsEnabled);
            writer.WriteBoolValue("phoneCallEnabled", PhoneCallEnabled);
            writer.WriteBoolValue("recordPaymentEnabled", RecordPaymentEnabled);
            writer.WriteBoolValue("refundsEnabled", RefundsEnabled);
            writer.WriteBoolValue("reviewsEnabled", ReviewsEnabled);
            writer.WriteBoolValue("settingsEnabled", SettingsEnabled);
            writer.WriteBoolValue("socialPlanner", SocialPlanner);
            writer.WriteBoolValue("tagsEnabled", TagsEnabled);
            writer.WriteBoolValue("triggersEnabled", TriggersEnabled);
            writer.WriteBoolValue("websitesEnabled", WebsitesEnabled);
            writer.WriteBoolValue("workflowsEnabled", WorkflowsEnabled);
            writer.WriteBoolValue("workflowsReadOnly", WorkflowsReadOnly);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
